library(gstat)        # Variogram
pdf_plot <- function(x, idx = c(rep(TRUE, length(x)))){
g = ggplot()+
geom_histogram(aes(x = x[idx], y = ..density..),
fill = '#557C55', alpha = 0.8)+
geom_density(aes(x = x[idx], y = ..density..),
color = '#062C30', size = 1)+
theme_bw()
return(g)
}
point_plot <- function(x,county, idx = c(rep(TRUE, length(x)))){
idx.c = Variable_df$COUNTYNAME == county
df = Variable_df[idx.c,]
g = ggplot()+
geom_point(aes(x = df$X[idx], y = df$Y[idx], color = x[idx] , size = abs(x[idx])))+
scale_colour_gradient2(low = "#313552",mid = "#FBF8F1", high = "#632626")
return(g)
}
path = '..\\..\\Roaming-Dogs-Data\\'
# Variable_df <- read.csv(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ), fileEncoding = 'utf-8')
Variable_shp<-shapefile(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ),encoding = 'utf-8')
Variable_shp@data["School"] <- rowSums(Variable_shp@data[c("Ele","Junior" ,"Senior")])
Variable_shp@data["Student"] <- rowSums(Variable_shp@data[c("Ele_stu","Junior_stu" ,"Senior_stu")])
Variable_shp@data[is.na(Variable_shp@data)] <- 0
Variable_shp@data$Nr = Variable_shp@data$Nr %>% as.integer()
library(spaMM)
col_X_03
col_X_03 = c("Cluster","School","Temple",  "P_H_CNT", "Income_mea", "Area_sqkm")
idx.county = Variable_df$COUNTYNAME == "臺南市"
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=11, fig.height=4.5)
library(GWmodel)      ### GW models
library(dplyr)
library(sp)           ## Data management
library(car)          ## vif
library(spdep)        ## Spatial autocorrelation
library(RColorBrewer) ## Visualization
library(classInt)     ## Class intervals
library(raster)       ## spatial data
library(grid)         # plot
library(gridExtra)    # Multiple plot
library(ggplot2)      # Multiple plot
library(gtable)
library(GGally)       # 相關係數圖矩陣（scatter plot matrix）
library(maptools)
library(MASS)
library(tmap)
library(gstat)        # Variogram
pdf_plot <- function(x, idx = c(rep(TRUE, length(x)))){
g = ggplot()+
geom_histogram(aes(x = x[idx], y = ..density..),
fill = '#557C55', alpha = 0.8)+
geom_density(aes(x = x[idx], y = ..density..),
color = '#062C30', size = 1)+
theme_bw()
return(g)
}
point_plot <- function(x,county, idx = c(rep(TRUE, length(x)))){
idx.c = Variable_df$COUNTYNAME == county
df = Variable_df[idx.c,]
g = ggplot()+
geom_point(aes(x = df$X[idx], y = df$Y[idx], color = x[idx] , size = abs(x[idx])))+
scale_colour_gradient2(low = "#313552",mid = "#FBF8F1", high = "#632626")
return(g)
}
path = '..\\..\\Roaming-Dogs-Data\\'
# Variable_df <- read.csv(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ), fileEncoding = 'utf-8')
Variable_shp<-shapefile(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ),encoding = 'utf-8')
Variable_shp@data["School"] <- rowSums(Variable_shp@data[c("Ele","Junior" ,"Senior")])
Variable_shp@data["Student"] <- rowSums(Variable_shp@data[c("Ele_stu","Junior_stu" ,"Senior_stu")])
Variable_shp@data[is.na(Variable_shp@data)] <- 0
Variable_shp@data$Nr = Variable_shp@data$Nr %>% as.integer()
idx.county = Variable_shp@data$COUNTYNAME == "臺南市"
col_X =
c( "Cluster",# 分群
"Hospital","Clinic", "Temple", "School", "Train.stat", # 公共建設
"Student", "Train.crow", # 人流
"high_rat",   "mid_rat","low_rat", "M_F_RAT" ,"P_H_CNT","H_CNT", "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta", # 村里收入
"Area_sqkm")
col_y = c("Nr")
for(i in c(col_X, col_y, "P_CNT", "X","Y")){
Variable_shp@data[i] = sapply(Variable_shp@data[i], function(x) as.numeric(x))
}
# for (i in col_X[col_X != "Cluster"]){
#
#     Variable_shp@data[i] <-scale(Variable_shp@data[i])
#
# }
Variable_df = Variable_shp@data
for (i in c(1:4)){
print(sum(Variable_df$Cluster[idx.county] == i))
}
g = ggplot(data = Variable_df[Variable_df$COUNTYNAME == "臺南市", ])+
geom_boxplot(aes(x = as.factor(Cluster), y = Nr))
g
corr = cor(Variable_df[Variable_df$COUNTYNAME == "臺南市",c(col_y, col_X)])
idx = abs(corr[,col_y])>.15
col_X_02 = names(idx)[idx]; col_X_02 = col_X_02[col_X_02 != col_y]
corr[idx,idx]
ggpairs(Variable_df, columns =c(col_X_02,col_y))
col_X_03 = c("Cluster","School","Temple",  "P_H_CNT", "Income_mea", "Area_sqkm")
idx.county = Variable_df$COUNTYNAME == "臺南市"
dt = Variable_df[idx.county,c(col_y, col_X_03)]
shp = Variable_shp[idx.county,c(col_y, col_X_03)]
print(dt %>% nrow())
f = Nr~.
ggpairs(Variable_df[idx.county,], columns =c(col_X_03,col_y))
residual_df = data.frame(VILLCODE = Variable_df$VILLCODE[idx.county],
COUNTYNAME = Variable_df$COUNTYNAME[idx.county],
TOWNNAME = Variable_df$TOWNNAME[idx.county],
VILLNAME = Variable_df$VILLNAME[idx.county],
X = Variable_df$X[idx.county],
Y = Variable_df$Y[idx.county],
Nr= Variable_df$Nr[idx.county],
Cluster = Variable_df$Cluster[idx.county])
glm.PO <- glm(f,  family = poisson(link = "log"), data = dt)
summary(glm.PO)
fit.resp = predict(glm.PO, newdata = dt, type = "response") # 已用 exp 轉過的
fit.link = predict(glm.PO, newdata = dt, type = "link") # log(mu_i)
res.pear = residuals(glm.PO, type = "pearson")
res.work = residuals(glm.PO, type = "working")
residual_df$glm.PO.res.pear = res.pear
residual_df$glm.PO.fit = fit.resp
### GLM_NB
- https://bookdown.org/roback/bookdown-BeyondMLR/ch-poissonreg.html
- https://fukamilab.github.io/BIO202/04-C-zero-data.html
先只用各里寺廟、學校、診所密度與男女比、里平均收入建模
```{r glm.NB}
glm.NB<- glm.nb(f ,data = dt)
summary(glm.NB)
fit.resp = predict(glm.NB, newdata = dt, type = "response") # 已用 exp 轉過的
fit.link = predict(glm.NB, newdata = dt, type = "link") # log(mu_i)
res.pear = residuals(glm.NB, type = "pearson")
res.work = residuals(glm.NB, type = "working")
residual_df["glm.NB.res.pear"] = res.pear
residual_df["glm.NB.fit"] = fit.resp
```
### GWPR
- http://www-sre.wu.ac.at/ersa/ersaconfs/ersa13/ERSA2013_paper_01142.pdf
- 帶寬 (依照論文來定)
```{r}
DM<-gw.dist(dp.locat=data.matrix(((Variable_df[idx.county,c('X', "Y")]))))
# bw.gwr <- bw.ggwr(f,
#                  data = Variable_shp[c(col_X_03, col_y, "Area_sqkm")],
#                  family = "poisson",
#                  approach = "AICc",
#                  kernel = "gaussian",
#                  adaptive = TRUE,
#                  dMat = DM )
core.HR = mean(.3+.3+.33+.25)*10000; ext.HR = mean(7.7+5.7+5.7+5.6)*10000
core.bw.gwr = (core.HR/pi)^.5; ext.bw.gwr = (ext.HR/pi)^.5;
```
```{r}
gwr.PO <- ggwr.basic(f,
data =shp,
family = "poisson",
bw = ext.bw.gwr,
kernel = "gaussian",
adaptive = TRUE,
dMat = DM)
res.pear = (Variable_shp$Nr[idx.county]-gwr.PO$SDF$yhat)/(gwr.PO$SDF$yhat)^.5
residual_df["gwr.PO.res.pear"] = res.pear
residual_df["gwr.PO.fit"] = gwr.PO$SDF$yhat
summary(gwr.PO$SDF)
```
### GWPR
- http://www-sre.wu.ac.at/ersa/ersaconfs/ersa13/ERSA2013_paper_01142.pdf
- 帶寬 (依照論文來定)
```{r}
DM<-gw.dist(dp.locat=data.matrix(((Variable_df[idx.county,c('X', "Y")]))))
# bw.gwr <- bw.ggwr(f,
#                  data = Variable_shp[c(col_X_03, col_y, "Area_sqkm")],
#                  family = "poisson",
#                  approach = "AICc",
#                  kernel = "gaussian",
#                  adaptive = TRUE,
#                  dMat = DM )
core.HR = mean(.3+.3+.33+.25)*10000; ext.HR = mean(7.7+5.7+5.7+5.6)*10000
core.bw.gwr = (core.HR/pi)^.5; ext.bw.gwr = (ext.HR/pi)^.5;
```
```{r}
gwr.PO <- ggwr.basic(f,
data =shp,
family = "poisson",
bw = ext.bw.gwr,
kernel = "gaussian",
adaptive = TRUE,
dMat = DM)
res.pear = (Variable_shp$Nr[idx.county]-gwr.PO$SDF$yhat)/(gwr.PO$SDF$yhat)^.5
residual_df["gwr.PO.res.pear"] = res.pear
residual_df["gwr.PO.fit"] = gwr.PO$SDF$yhat
summary(gwr.PO$SDF)
```
library(spaMM)
col_X_03
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_ComPo = fitme(Nr~Cluster+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = COMPoisson(nu = 0.9), resid.model = )
glmm_ComPo %>% summary()
residuals(glmm_ComPo, type="response", force=TRUE)
hatvalues(glmm_ComPo)
hatvalues(glmm_ComPo, which = "resid")
Nr = residual_df$Nr
p1 = pdf_plot(Nr,Nr<1000); p2 = point_plot(Nr,"臺南市",Nr<1000)
ggpubr::ggarrange(p1, p2, ncol = 2)
mean(res[Nr<1000])
Nr = residual_df$Nr
p1 = pdf_plot(Nr,Nr<1000); p2 = point_plot(Nr,"臺南市",Nr<1000)
ggpubr::ggarrange(p1, p2, ncol = 2)
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_ComPo = fitme(Nr~Cluster+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = negbin(), resid.model = )
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_NB = fitme(Nr~Cluster+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = negbin(), resid.model = )
glmm_NB %>% summary()
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_ComPo = fitme(Nr~Cluster+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = COMPoisson(nu = 0.9), resid.model = )
glmm_ComPo %>% summary()
y.hat = predict(glmm_ComPo,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")])
# residuals(object, type = c("deviance", "pearson", "response", "std_dev_res"), force=FALSE, ...)
residuals(glmm_ComPo, type="response", force=TRUE)
glmm_NB %>% summary()
predict(glmm_NB,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")])
predict(glmm_NB,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "link")
predict(glmm_NB,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
Variable_df[idx.county, "Nr"]
Variable_df[idx.county, "Nr"]-predict(glmm_NB,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
residuals(glmm_NB,  type = "response")
residual_df$glmm.NB.res.resp = res.resp
res.resp = residuals(glmm_NB,  type = "response")
residual_df$glmm.NB.fit = fit
residual_df$glmm.NB.res.resp = res.resp
fit = predict(glmm_NB,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
res.resp = residuals(glmm_NB,  type = "response")
residual_df$glmm.NB.fit = fit
residual_df$glmm.NB.res.resp = res.resp
View(residual_df)
qplot(x = fit, y = res.resp)
res.resp = residuals(glmm_NB,  type = "response")
qplot(x = fit, y = res.resp)
fit
res.resp
fit
c(fit)
res.resp
qplot(x = c(fit), y = res.resp)
glmm_NB %>% summary()
View(Variable_df)
library(spaMM)
col_X_03
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_NB = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = negbin(), resid.model = )
glmm_NB %>% summary()
fit = predict(glmm_NB,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
res.resp = residuals(glmm_NB,  type = "response")
qplot(x = c(fit), y = res.resp)
residual_df$glmm.NB.fit = fit ;residual_df$glmm.NB.res.resp = res.resp
library(spaMM)
col_X_03
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_ComPo = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = COMPoisson(nu = 0.9), resid.model = )
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_ComPo = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = COMPoisson(nu = 1), resid.model = )
glmm_ComPo %>% summary()
fit = predict(glmm_ComPo,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
res.resp = residuals(glmm_ComPo,  type = "response")
qplot(x = c(fit), y = res.resp)
residual_df$glmm_ComPo.fit = fit ;residual_df$glmm_ComPo.res.resp = res.resp
idx.county = Variable_shp@data$COUNTYNAME == "臺東縣"
col_X =
c( "Cluster",# 分群
"Hospital","Clinic", "Temple", "School", "Train.stat", # 公共建設
"Student", "Train.crow", # 人流
"high_rat",   "mid_rat","low_rat", "M_F_RAT" ,"P_H_CNT","H_CNT", "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta", # 村里收入
"Area_sqkm")
col_y = c("Nr")
for(i in c(col_X, col_y, "P_CNT", "X","Y")){
Variable_shp@data[i] = sapply(Variable_shp@data[i], function(x) as.numeric(x))
}
Variable_df = Variable_shp@data
for (i in c(1:4)){
print(sum(Variable_df$Cluster[idx.county] == i))
}
sum(idx.county)
idx.county = Variable_shp@data$COUNTYNAME == "臺東縣"
idx.county
idx.county = Variable_shp@data$COUNTYNAME == "臺東縣"
sum(idx.county)
col_X =
c( "Cluster",# 分群
"Hospital","Clinic", "Temple", "School", "Train.stat", # 公共建設
"Student", "Train.crow", # 人流
"high_rat",   "mid_rat","low_rat", "M_F_RAT" ,"P_H_CNT","H_CNT", "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta", # 村里收入
"Area_sqkm")
col_y = c("Nr")
for(i in c(col_X, col_y, "P_CNT", "X","Y")){
Variable_shp@data[i] = sapply(Variable_shp@data[i], function(x) as.numeric(x))
}
g = ggplot(data = Variable_df[Variable_df$COUNTYNAME == "臺南市", ])+
geom_boxplot(aes(x = as.factor(Cluster), y = Nr))
g
g = ggplot(data = Variable_df[Variable_df$COUNTYNAME == "臺東縣", ])+
geom_boxplot(aes(x = as.factor(Cluster), y = Nr))
g
corr = cor(Variable_df[Variable_df$COUNTYNAME == "臺南市",c(col_y, col_X)])
idx = abs(corr[,col_y])>.15
col_X_02 = names(idx)[idx]; col_X_02 = col_X_02[col_X_02 != col_y]
corr[idx,idx]
ggpairs(Variable_df, columns =c(col_X_02,col_y))
idx.county = Variable_df$COUNTYNAME == "臺東縣"
dt = Variable_df[idx.county,c(col_y, col_X_03)]
shp = Variable_shp[idx.county,c(col_y, col_X_03)]
print(dt %>% nrow())
f = Nr~.
ggpairs(Variable_df[idx.county,], columns =c(col_X_03,col_y))
ggpairs(Variable_df[idx.county,], columns =c(col_X_03,col_y))
residual_df = data.frame(VILLCODE = Variable_df$VILLCODE[idx.county],
COUNTYNAME = Variable_df$COUNTYNAME[idx.county],
TOWNNAME = Variable_df$TOWNNAME[idx.county],
VILLNAME = Variable_df$VILLNAME[idx.county],
X = Variable_df$X[idx.county],
Y = Variable_df$Y[idx.county],
Nr= Variable_df$Nr[idx.county],
Cluster = Variable_df$Cluster[idx.county])
glm.PO <- glm(f,  family = poisson(link = "log"), data = dt)
summary(glm.PO)
fit.resp = predict(glm.PO, newdata = dt, type = "response") # 已用 exp 轉過的
fit.link = predict(glm.PO, newdata = dt, type = "link") # log(mu_i)
res.pear = residuals(glm.PO, type = "pearson")
res.work = residuals(glm.PO, type = "working")
residual_df$glm.PO.res.pear = res.pear
residual_df$glm.PO.fit = fit.resp
library(spaMM)
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_ComPo = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = COMPoisson(nu = 1), resid.model = )
glmm_ComPo %>% summary()
fit = predict(glmm_ComPo,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
res.resp = residuals(glmm_ComPo,  type = "response")
qplot(x = c(fit), y = res.resp)
residual_df$glmm_ComPo.fit = fit ;residual_df$glmm_ComPo.res.resp = res.resp
library(spaMM)
col_X_03
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_NB = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = negbin(), resid.model = )
glmm_NB %>% summary()
fit = predict(glmm_NB,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
res.resp = residuals(glmm_NB,  type = "response")
qplot(x = c(fit), y = res.resp)
residual_df$glmm.NB.fit = fit ;residual_df$glmm.NB.res.resp = res.resp
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_ComPo = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = COMPoisson(nu = .5), resid.model = )
library(spaMM)
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_ComPo = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = COMPoisson(nu = .5), resid.model = )
```{r}
glmm_ComPo %>% summary()
fit = predict(glmm_ComPo,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
res.resp = residuals(glmm_ComPo,  type = "response")
qplot(x = c(fit), y = res.resp)
residual_df$glmm_ComPo.fit = fit ;residual_df$glmm_ComPo.res.resp = res.resp
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_NB = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = negbin())
glmm_NB %>% summary()
fit = predict(glmm_NB,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
res.resp = residuals(glmm_NB,  type = "response")
qplot(x = c(fit), y = res.resp)
residual_df$glmm.NB.fit = fit ;residual_df$glmm.NB.res.resp = res.resp
qplot(x = c(fit), y = res.resp)
library(spaMM)
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_ComPo = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = COMPoisson(nu = .5), resid.model = )
col_X_03 = c("Cluster","School","Temple",  "P_H_CNT", "Income_mea", "Area_sqkm")
idx.county = Variable_df$COUNTYNAME == "臺東縣"
dt = Variable_df[idx.county,c(col_y, col_X_03)]
shp = Variable_shp[idx.county,c(col_y, col_X_03)]
print(dt %>% nrow())
f = Nr~.
ggpairs(Variable_df[idx.county,], columns =c(col_X_03,col_y))
residual_df = data.frame(VILLCODE = Variable_df$VILLCODE[idx.county],
COUNTYNAME = Variable_df$COUNTYNAME[idx.county],
TOWNNAME = Variable_df$TOWNNAME[idx.county],
VILLNAME = Variable_df$VILLNAME[idx.county],
X = Variable_df$X[idx.county],
Y = Variable_df$Y[idx.county],
Nr= Variable_df$Nr[idx.county],
Cluster = Variable_df$Cluster[idx.county],
P_H_CNT = Variable_df$P_H_CNT[idx.county],
Income_mea = Variable_df$Income_mea[idx.county],
Area_sqkm = Variable_df$Area_sqkm[idx.county])
library(spaMM)
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_ComPo = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = COMPoisson(nu = .5), resid.model = = ~ X3+I(X3^2))
library(spaMM)
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_ComPo = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = COMPoisson(nu = .5))
glmm_ComPo %>% summary()
fit = predict(glmm_ComPo,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
res.resp = residuals(glmm_ComPo,  type = "response")
qplot(x = c(fit), y = res.resp)
residual_df$glmm_ComPo.fit = fit ;residual_df$glmm_ComPo.res.resp = res.resp
library(spaMM)
col_X_03
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_NB = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = negbin())
glmm_NB %>% summary()
fit = predict(glmm_NB,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
res.resp = residuals(glmm_NB,  type = "response")
qplot(x = c(fit), y = res.resp)
residual_df$glmm.NB.fit = fit ;residual_df$glmm.NB.res.resp = res.resp
library(spaMM)
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_ComPo = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = COMPoisson())
glmm_ComPo %>% summary()
fit = predict(glmm_ComPo,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
res.resp = residuals(glmm_ComPo,  type = "response")
qplot(x = c(fit), y = res.resp)
residual_df$glmm_ComPo.fit = fit ;residual_df$glmm_ComPo.res.resp = res.resp
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=11, fig.height=4.5)
idx.county = Variable_shp@data$COUNTYNAME == "臺南市"
sum(idx.county)
col_X =
c( "Cluster",# 分群
"Hospital","Clinic", "Temple", "School", "Train.stat", # 公共建設
"Student", "Train.crow", # 人流
"high_rat",   "mid_rat","low_rat", "M_F_RAT" ,"P_H_CNT","H_CNT", "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta", # 村里收入
"Area_sqkm")
col_y = c("Nr")
for (i in c(1:4)){
print(sum(Variable_df$Cluster[idx.county] == i))
}
g = ggplot(data = Variable_df[Variable_df$COUNTYNAME == "臺東縣", ])+
geom_boxplot(aes(x = as.factor(Cluster), y = Nr))
g
library(spaMM)
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_ComPo = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = COMPoisson())
glmm_ComPo %>% summary()
fit = predict(glmm_ComPo,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
res.resp = residuals(glmm_ComPo,  type = "response")
qplot(x = c(fit), y = res.resp)
residual_df$glmm_ComPo.fit = fit ;residual_df$glmm_ComPo.res.resp = res.resp
idx.county %>% sum
fit = predict(glmm_ComPo,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
res.resp = residuals(glmm_ComPo,  type = "response")
qplot(x = c(fit), y = res.resp)
col_X_03 = c("Cluster","School","Temple",  "P_H_CNT", "Income_mea", "Area_sqkm")
dt = Variable_df[idx.county,c(col_y, col_X_03)]
shp = Variable_shp[idx.county,c(col_y, col_X_03)]
print(dt %>% nrow())
f = Nr~.
ggpairs(Variable_df[idx.county,], columns =c(col_X_03,col_y))
residual_df = data.frame(VILLCODE = Variable_df$VILLCODE[idx.county],
COUNTYNAME = Variable_df$COUNTYNAME[idx.county],
TOWNNAME = Variable_df$TOWNNAME[idx.county],
VILLNAME = Variable_df$VILLNAME[idx.county],
X = Variable_df$X[idx.county],
Y = Variable_df$Y[idx.county],
Nr= Variable_df$Nr[idx.county],
Cluster = Variable_df$Cluster[idx.county],
P_H_CNT = Variable_df$P_H_CNT[idx.county],
Income_mea = Variable_df$Income_mea[idx.county],
Area_sqkm = Variable_df$Area_sqkm[idx.county])
fit = predict(glmm_ComPo,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
res.resp = residuals(glmm_ComPo,  type = "response")
qplot(x = c(fit), y = res.resp)
residual_df$glmm_ComPo.fit = fit ;residual_df$glmm_ComPo.res.resp = res.resp
library(spaMM)
col_X_03
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_NB = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = negbin())
glmm_NB %>% summary()
fit = predict(glmm_NB,  newdata = Variable_df[idx.county, c(col_X_03,  "X", "Y")],type = "response")
res.resp = residuals(glmm_NB,  type = "response")
qplot(x = c(fit), y = res.resp)
residual_df$glmm.NB.fit = fit ;residual_df$glmm.NB.res.resp = res.resp
qplot(x = residual_df$Cluster, y = res.resp)
qplot(x = residual_df$Area_sqkm, y = res.resp)
qplot(x = residual_df$Income_mea, y = res.resp)
qplot(x = residual_df$P_H_CNT, y = res.resp)
qplot(x = residual_df$Nr, y = res.resp)
res.resp = residuals(glmm_ComPo,  type = "response")
residual_df$glmm_ComPo.fit = fit ;residual_df$glmm_ComPo.res.resp = res.resp
qplot(x = residual_df$Nr, y = res.resp)
qplot(x = residual_df$Income_mea, y = res.resp)
qplot(x = residual_df$P_H_CNT, y = res.resp)
qplot(x = residual_df$Income_mea, y = res.resp)
qplot(x = residual_df$Income_mea, y = res.resp)
# Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
glmm_ComPo = fitme(Nr~Cluster+P_H_CNT+Area_sqkm+Matern(1|X+Y),data= Variable_df[idx.county, c(col_y, col_X_03,  "X", "Y")],
family = COMPoisson(), resid.model = ~Income_mea)
