# Variable_df <- read.csv(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ), fileEncoding = 'utf-8')
Variable_shp<-shapefile(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ),encoding = 'utf-8')
Variable_shp@data["School"] <- rowSums(Variable_shp@data[c("Ele","Junior" ,"Senior")])
Variable_shp@data["Student"] <- rowSums(Variable_shp@data[c("Ele_stu","Junior_stu" ,"Senior_stu")])
Variable_shp@data[is.na(Variable_shp@data)] <- 0
Variable_shp@data$Nr = Variable_shp@data$Nr %>% as.integer()
col_X =
c( "Cluster",# 分群
"Hospital","Clinic", "Temple", "School", "Train.stat", # 公共建設
"Student", "Train.crow", # 人流
"high_rat",   "mid_rat","low_rat", "M_F_RAT" ,"P_H_CNT","H_CNT", "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta", # 村里收入
"Area_sqkm")
col_y = c("Nr")
for(i in c(col_X, col_y, "P_CNT", "X","Y")){
Variable_shp@data[i] = sapply(Variable_shp@data[i], function(x) as.numeric(x))
# if( i != "Cluster" & i != "Nr" & i != "X" & i != "Y")  {
#   Variable_shp@data[i] = scale(Variable_shp@data[i])
}
}
for(i in c(col_X, col_y, "P_CNT", "X","Y")){
Variable_shp@data[i] = sapply(Variable_shp@data[i], function(x) as.numeric(x))
# if( i != "Cluster" & i != "Nr" & i != "X" & i != "Y")  {
#   Variable_shp@data[i] = scale(Variable_shp@data[i])
# }
}
Variable_df = Variable_shp@data
col_X_03_01 = c("Income_mea", "offset(log(Area_sqkm))")
col_X_03_02 = "Cluster"
var_X = paste(col_X_03_01, collapse = " + ")
counties = "新北市"
idx.county = Variable_shp@data$COUNTYNAME == counties
print( sum(idx.county))
corr = "Matern"; col_X_03_02 = "Cluster"
spa_random = sprintf("%s(0+%s|X_new+Y_new)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random));f
nb = 3; nd = 5
b2_list = seq(0.5,3,length.out = nb)
d_list = seq(0,180,length.out = nd)
fit_list = res_list = par_list = model_list = list()
i = 1; j = 2
for(i in c(1:nb)){
for(j in c(1:(nd-1))){
b = b2_list[i]
d = d_list[j]
print("========================")
df = Variable_df[idx.county,]
new_XY = rat_long(x = df$X, y =  df$Y ,degree = d, b1 = 1, b2 = b)
df_newXY = cbind(df, new_XY)
glmm_ComPo = fitme(f,data= df_newXY[, c(col_y, col_X,  "X_new", "Y_new")], family = negbin())
print( summary(glmm_ComPo))
fit = list(as.vector(predict(glmm_ComPo,type = "response")))
fit_list = append(fit_list, fit)
res = list(as.vector(residuals(glmm_ComPo,  type = "std_dev_res")))
res_list = append(res_list, res)
par = list(c("b2" = b, "d" = d))
par_list = append(par_list, par)
}
}
b = b2_list[i]
d = d_list[j]
print("========================")
df = Variable_df[idx.county,]
new_XY = rat_long(x = df$X, y =  df$Y ,degree = d, b1 = 1, b2 = b)
df_newXY = cbind(df, new_XY)
glmm_ComPo = fitme(f,data= df_newXY[, c(col_y, col_X,  "X_new", "Y_new")], family = negbin())
glmm_ComPo = fitme(f,data= df_newXY[, c(col_y, col_X,  "X_new", "Y_new")], family = negbin())
print( summary(glmm_ComPo))
fit = list(as.vector(predict(glmm_ComPo,type = "response")))
fit_list = append(fit_list, fit)
res = list(as.vector(residuals(glmm_ComPo,  type = "std_dev_res")))
res_list = append(res_list, res)
par = list(c("b2" = b, "d" = d))
par_list = append(par_list, par)
# spaMM_fitting_plot
i = 1
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 1
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#0000ff",size = 1)+
geom_hline(yintercept=-3,linetype="dashed",colour="#0000ff",size = 1)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 1
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#0000ff",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#0000ff",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 1
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
nb = 3; nd = 5
b2_list = seq(0.5,3,length.out = nb)
d_list = seq(0,180,length.out = nd)
fit_list = res_list = par_list = model_list = list()
i = 1; j = 2
for(i in c(1:nb)){
for(j in c(1:(nd-1))){
b = b2_list[i]
d = d_list[j]
print("========================")
df = Variable_df[idx.county,]
new_XY = rat_long(x = df$X, y =  df$Y ,degree = d, b1 = 1, b2 = b)
df_newXY = cbind(df, new_XY)
glmm_ComPo = fitme(f,data= df_newXY[, c(col_y, col_X,  "X_new", "Y_new")], family = negbin())
print( summary(glmm_ComPo))
fit = list(as.vector(predict(glmm_ComPo,type = "response")))
fit_list = append(fit_list, fit)
res = list(as.vector(residuals(glmm_ComPo,  type = "std_dev_res")))
res_list = append(res_list, res)
par = list(c("b2" = b, "d" = d))
par_list = append(par_list, par)
}
}
col_X_03_01 = c("Income_mea", "offset(log(Area_sqkm))")
col_X_03_02 = "Cluster"
var_X = paste(col_X_03_01, collapse = " + ")
counties = "臺東縣"
idx.county = Variable_shp@data$COUNTYNAME == counties
print( sum(idx.county))
corr = "Matern"; col_X_03_02 = "Cluster"
spa_random = sprintf("%s(0+%s|X_new+Y_new)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random));f
nb = 3; nd = 5
b2_list = seq(0.5,3,length.out = nb)
d_list = seq(0,180,length.out = nd)
fit_list = res_list = par_list = model_list = list()
i = 1; j = 2
for(i in c(1:nb)){
for(j in c(1:(nd-1))){
b = b2_list[i]
d = d_list[j]
print("========================")
df = Variable_df[idx.county,]
new_XY = rat_long(x = df$X, y =  df$Y ,degree = d, b1 = 1, b2 = b)
df_newXY = cbind(df, new_XY)
glmm_ComPo = fitme(f,data= df_newXY[, c(col_y, col_X,  "X_new", "Y_new")], family = negbin())
print( summary(glmm_ComPo))
fit = list(as.vector(predict(glmm_ComPo,type = "response")))
fit_list = append(fit_list, fit)
res = list(as.vector(residuals(glmm_ComPo,  type = "std_dev_res")))
res_list = append(res_list, res)
par = list(c("b2" = b, "d" = d))
par_list = append(par_list, par)
}
}
# spaMM_fitting_plot
i = 1
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 2
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 3
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 3
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 10)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 4
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 10)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 15
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 10)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 12
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 10)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
nb = 3; nd = 5
b2_list = seq(0.5,3,length.out = nb)
d_list = seq(0,180,length.out = nd)
fit_list = res_list = par_list = model_list = list()
i = 1; j = 2
for(i in c(1:nb)){
for(j in c(1:(nd-1))){
b = b2_list[i]
d = d_list[j]
print("========================")
df = Variable_df[idx.county,]
new_XY = rat_long(x = df$X, y =  df$Y ,degree = d, b1 = 1, b2 = b)
df_newXY = cbind(df, new_XY)
glmm_ComPo = fitme(f,data= df_newXY[, c(col_y, col_X,  "X_new", "Y_new")], family = COMPoisson())
print( summary(glmm_ComPo))
fit = list(as.vector(predict(glmm_ComPo,type = "response")))
fit_list = append(fit_list, fit)
res = list(as.vector(residuals(glmm_ComPo,  type = "std_dev_res")))
res_list = append(res_list, res)
par = list(c("b2" = b, "d" = d))
par_list = append(par_list, par)
}
}
# spaMM_fitting_plot
i = 12
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 10)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 11
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 10)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 10
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 10)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
col_X_03_01 = c("Income_mea", "offset(log(Area_sqkm))")
col_X_03_02 = "Cluster"
var_X = paste(col_X_03_01, collapse = " + ")
counties = "臺南市"
idx.county = Variable_shp@data$COUNTYNAME == counties
print( sum(idx.county))
corr = "Matern"; col_X_03_02 = "Cluster"
spa_random = sprintf("%s(0+%s|X_new+Y_new)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random));f
nb = 3; nd = 5
b2_list = seq(0.5,3,length.out = nb)
d_list = seq(0,180,length.out = nd)
fit_list = res_list = par_list = model_list = list()
i = 1; j = 2
for(i in c(1:nb)){
for(j in c(1:(nd-1))){
b = b2_list[i]
d = d_list[j]
print("========================")
df = Variable_df[idx.county,]
new_XY = rat_long(x = df$X, y =  df$Y ,degree = d, b1 = 1, b2 = b)
df_newXY = cbind(df, new_XY)
glmm_ComPo = fitme(f,data= df_newXY[, c(col_y, col_X,  "X_new", "Y_new")], family = negbin())
print( summary(glmm_ComPo))
fit = list(as.vector(predict(glmm_ComPo,type = "response")))
fit_list = append(fit_list, fit)
res = list(as.vector(residuals(glmm_ComPo,  type = "std_dev_res")))
res_list = append(res_list, res)
par = list(c("b2" = b, "d" = d))
par_list = append(par_list, par)
}
}
# spaMM_fitting_plot
i = 1
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 10)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 2
# spaMM_fitting_plot
i = 2
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 10)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 10
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 10)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 11
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 10)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
# spaMM_fitting_plot
i = 12
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 10)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
View(glmm_ComPo)
for(i in c(col_X, col_y, "P_CNT", "X","Y")){
Variable_shp@data[i] = sapply(Variable_shp@data[i], function(x) as.numeric(x))
# if( i != "Cluster" & i != "Nr" & i != "X" & i != "Y")  {
#   Variable_shp@data[i] = scale(Variable_shp@data[i])
# }
}
Variable_df = Variable_shp@data
path = '..\\..\\..\\Roaming-Dogs-Data\\'
# Variable_df <- read.csv(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ), fileEncoding = 'utf-8')
Variable_shp<-shapefile(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ),encoding = 'utf-8')
Variable_shp@data["School"] <- rowSums(Variable_shp@data[c("Ele","Junior" ,"Senior")])
Variable_shp@data["Student"] <- rowSums(Variable_shp@data[c("Ele_stu","Junior_stu" ,"Senior_stu")])
Variable_shp@data[is.na(Variable_shp@data)] <- 0
Variable_shp@data$Nr = Variable_shp@data$Nr %>% as.integer()
col_X =
c( "Cluster",# 分群
"Hospital","Clinic", "Temple", "School", "Train.stat", # 公共建設
"Student", "Train.crow", # 人流
"high_rat",   "mid_rat","low_rat", "M_F_RAT" ,"P_H_CNT","H_CNT", "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta", # 村里收入
"Area_sqkm")
col_y = c("Nr")
for(i in c(col_X, col_y, "P_CNT", "X","Y")){
Variable_shp@data[i] = sapply(Variable_shp@data[i], function(x) as.numeric(x))
# if( i != "Cluster" & i != "Nr" & i != "X" & i != "Y")  {
#   Variable_shp@data[i] = scale(Variable_shp@data[i])
# }
}
Variable_df = Variable_shp@data
col_X_03_01 = c("I(log(Income_mea))", "offset(log(Area_sqkm))")
col_X_03_02 = "Cluster"
var_X = paste(col_X_03_01, collapse = " + ")
counties = "臺南市"
idx.county = Variable_shp@data$COUNTYNAME == counties
print( sum(idx.county))
corr = "Matern"; col_X_03_02 = "Cluster"
spa_random = sprintf("%s(0+%s|X_new+Y_new)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random));f
i = 1; j = 2
b = b2_list[i]
d = d_list[j]
print("========================")
df = Variable_df[idx.county,]
new_XY = rat_long(x = df$X, y =  df$Y ,degree = d, b1 = 1, b2 = b)
df_newXY = cbind(df, new_XY)
glmm_ComPo = fitme(f,data= df_newXY[, c(col_y, col_X,  "X_new", "Y_new")], family = negbin())
glmm_ComPo = fitme(f,data= df_newXY[, c(col_y, col_X,  "X_new", "Y_new")], family = negbin())
print( summary(glmm_ComPo))
fit = list(as.vector(predict(glmm_ComPo,type = "response")))
fit_list = append(fit_list, fit)
res = list(as.vector(residuals(glmm_ComPo,  type = "std_dev_res")))
res = list(as.vector(residuals(glmm_ComPo,  type = "std_dev_res")))
res_list = append(res_list, res)
par = list(c("b2" = b, "d" = d))
par_list = append(par_list, par)
summary(glmm_ComPo)
col_X_03_01 = c("I((Income_mea)^2)", "offset(log(Area_sqkm))")
col_X_03_02 = "Cluster"
var_X = paste(col_X_03_01, collapse = " + ")
counties = "臺南市"
idx.county = Variable_shp@data$COUNTYNAME == counties
print( sum(idx.county))
corr = "Matern"; col_X_03_02 = "Cluster"
spa_random = sprintf("%s(0+%s|X_new+Y_new)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random));f
# spaMM_fitting_plot
i = 12
p1 = ggplot()+
geom_point(aes(x = fit_list[[i]], y = res_list[[i]]))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res")+
geom_hline(yintercept=3 ,linetype="dashed",colour="#281a14",size = .5)+
geom_hline(yintercept=-3,linetype="dashed",colour="#281a14",size = .5)+
ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+geom_histogram(aes(x = res_list[[i]], y = ..density..), bins = 10)+
geom_density(aes(x = as.vector(res_list[[i]]), y = ..density..))+
xlab("std_dev_res")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2)
nb = 3; nd = 5
b2_list = seq(0.5,3,length.out = nb)
d_list = seq(0,180,length.out = nd)
fit_list = res_list = par_list = model_list = list()
i = 1; j = 2
# for(i in c(1:nb)){
#   for(j in c(1:(nd-1))){
b = b2_list[i]
d = d_list[j]
print("========================")
df = Variable_df[idx.county,]
new_XY = rat_long(x = df$X, y =  df$Y ,degree = d, b1 = 1, b2 = b)
df_newXY = cbind(df, new_XY)
glmm_ComPo = fitme(f,data= df_newXY[, c(col_y, col_X,  "X_new", "Y_new")], family = negbin())
print( summary(glmm_ComPo))
fit = list(as.vector(predict(glmm_ComPo,type = "response")))
fit_list = append(fit_list, fit)
res = list(as.vector(residuals(glmm_ComPo,  type = "std_dev_res")))
res_list = append(res_list, res)
par = list(c("b2" = b, "d" = d))
par_list = append(par_list, par)
#   }
# }
