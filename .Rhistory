Variable_KS_df[i_new] = Variable_KS_df$i/Variable_KS_df$Area_sqkm
}
Variable_KS_shp@data['Market']
colnames(Variable_KS_shp@data)
Variable_KS_shp<-shapefile(paste0(path, "@Test_KS\\Variable.shp" ),encoding = 'big5')
colnames(Variable_KS_shp@data)
Variable_KS_shp@data[i] = sapply(Variable_KS_df$i, function(x) as.numeric(x))
for(i in c(col_X, col_y)){
Variable_KS_shp@data[i] = sapply(Variable_KS_df$i, function(x) as.numeric(x))
}
print(colnames(Variable_KS_shp@data))
print(i)
for(i in c(col_X, col_y)){
print(i)
Variable_KS_shp@data[i] = sapply(Variable_KS_df$i, function(x) as.numeric(x))
}
print(colnames(Variable_KS_shp@data))
for(i in c(col_X, col_y)){
print(i)
Variable_KS_shp@data$i = sapply(Variable_KS_df$i, function(x) as.numeric(x))
}
Variable_KS_shp@data$COUNTYNAME
sapply(Variable_KS_df$Hospital, function(x) as.numeric(x))
Variable_KS_shp@data$Hospital = sapply(Variable_KS_df$Hospital, function(x) as.numeric(x))
Variable_KS_shp@data$i = sapply(Variable_KS_shp@data, function(x) as.numeric(x))
for(i in c(col_X, col_y)){
print(i)
Variable_KS_shp@data$i = sapply(Variable_KS_shp@data$i, function(x) as.numeric(x))
}
Variable_KS_shp@data[i] = sapply(Variable_KS_shp@data[i], function(x) as.numeric(x))
path = '..\\..\\Roaming-Dogs-Data\\'
Variable_KS_df <- read.csv(paste0(path, "@Test_KS\\Variable.csv" ), fileEncoding = 'utf-8')
Variable_KS_shp<-shapefile(paste0(path, "@Test_KS\\Variable.shp" ),encoding = 'big5')
Variable_KS_shp<-shapefile(paste0(path, "@Test_KS\\Variable.shp" ),encoding = 'big5')
Variable_KS_shp@data[is.na(Variable_KS_shp@data)] <- 0
Variable_KS_df[is.na(Variable_KS_df)] <- 0
```{r Varaible name 01}
col_X =
c( "Cluster", # 分群
"Market","Hospital","Clinic", "Temple", "Ele","Junior" ,"Senior", "Train.stat", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta") # 村里收入
col_y = c('Nt')
for(i in c(col_X, col_y)){
print(i)
Variable_KS_shp@data[i] = sapply(Variable_KS_shp@data[i], function(x) as.numeric(x))
}
print(colnames(Variable_KS_shp@data))
for(i in c('Market','Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic")){
i_new = paste0(i, "_den")
print(i_new)
Variable_KS_shp@data[i_new] = Variable_KS_shp@data[i]/Variable_KS_shp@data$Area_sqkm
Variable_KS_df[i_new] = Variable_KS_df$i/Variable_KS_df$Area_sqkm
}
col_X_scale =
c(
"Market_den","Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea", "Income_sta")
for (i in col_X_scale){
print(i)
Variable_KS_df[i] <- scale(Variable_KS_df[i])
Variable_KS_shp@data[i] <-scale(Variable_KS_shp@data[i])
}
for(i in c(col_X, col_y)){
Variable_KS_shp@data[i] = sapply(Variable_KS_shp@data[i], function(x) as.numeric(x))
}
print(colnames(Variable_KS_shp@data))
for(i in c('Market','Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic")){
i_new = paste0(i, "_den")
print(i_new)
Variable_KS_shp@data[i_new] = Variable_KS_shp@data[i]/Variable_KS_shp@data$Area_sqkm
Variable_KS_df[i_new] = Variable_KS_df$i/Variable_KS_df$Area_sqkm
}
col_X_scale =
c(
"Market_den","Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea", "Income_sta")
for (i in col_X_scale){
Variable_KS_df[i] <- scale(Variable_KS_df[i])
Variable_KS_shp@data[i] <-scale(Variable_KS_shp@data[i])
}
for(i in c('Market','Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic")){
i_new = paste0(i, "_den")
Variable_KS_shp@data[i_new] = Variable_KS_shp@data[i]/Variable_KS_shp@data$Area_sqkm
Variable_KS_df[i_new] = Variable_KS_df$i/Variable_KS_df$Area_sqkm
}
corr = cor(Variable_KS_df[c(col_y,col_X)])
idx = abs(corr[,'Nt'])>.2
col_X_02 = names(corr[idx,'Nt']) %>% tail(-1)
col_X_02
col_X =
c( "Cluster", # 分群
"Market_den","Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
corr = cor(Variable_KS_df[c(col_y,col_X)])
idx = abs(corr[,'Nt'])>.2
col_X_02 = names(corr[idx,'Nt']) %>% tail(-1)
col_X_02
col_X =
c( "Cluster", # 分群
"Market_den","Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
Variable_KS_df[c(col_y,col_X)]
corr
getwd()
path = '..\\..\\Roaming-Dogs-Data\\'
Variable_KS_df <- read.csv(paste0(path, "@Test_KS\\Variable.csv" ), fileEncoding = 'utf-8')
Variable_KS_shp<-shapefile(paste0(path, "@Test_KS\\Variable.shp" ),encoding = 'big5')
Variable_KS_shp<-shapefile(paste0(path, "@Test_KS\\Variable.shp" ),encoding = 'big5')
Variable_KS_shp@data[is.na(Variable_KS_shp@data)] <- 0
Variable_KS_shp@data[is.na(Variable_KS_shp@data)] <- 0
Variable_KS_df[is.na(Variable_KS_df)] <- 0
View(Variable_KS_df)
col_X =
c( "Cluster", # 分群
"Market","Hospital","Clinic", "Temple", "Ele","Junior" ,"Senior", "Train.stat", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta") # 村里收入
col_y = c('Nt')
col_X =
c( "Cluster", # 分群
"Market","Hospital","Clinic", "Temple", "Ele","Junior" ,"Senior", "Train.stat", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta") # 村里收入
col_y = c('Nt')
```{r 轉成數值}
for(i in c(col_X, col_y)){
Variable_KS_shp@data[i] = sapply(Variable_KS_shp@data[i], function(x) as.numeric(x))
}
print(colnames(Variable_KS_shp@data))
View(Variable_KS_shp)
View(Variable_KS_shp@data)
View(Variable_KS_shp@data[c(col_X_02, col_y)])
```{r Load data}
getwd()
getwd()
path = '..\\..\\Roaming-Dogs-Data\\'
Variable_KS_df <- read.csv(paste0(path, "@Test_KS\\Variable.csv" ), fileEncoding = 'utf-8')
Variable_KS_shp<-shapefile(paste0(path, "@Test_KS\\Variable.shp" ),encoding = 'big5')
Variable_KS_shp@data[is.na(Variable_KS_shp@data)] <- 0
Variable_KS_df[is.na(Variable_KS_df)] <- 0
col_X =
c( "Cluster", # 分群
"Market","Hospital","Clinic", "Temple", "Ele","Junior" ,"Senior", "Train.stat", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta") # 村里收入
col_y = c('Nt')
for(i in c(col_X, col_y)){
Variable_KS_shp@data[i] = sapply(Variable_KS_shp@data[i], function(x) as.numeric(x))
}
col_y = c('Nt')
col_X =
c( "Cluster", # 分群
"Market","Hospital","Clinic", "Temple", "Ele","Junior" ,"Senior", "Train.stat", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta") # 村里收入
col_y = c('Nt')
for(i in c(col_X, col_y)){
Variable_KS_shp@data[i] = sapply(Variable_KS_shp@data[i], function(x) as.numeric(x))
}
for(i in c('Market','Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic")){
i_new = paste0(i, "_den")
Variable_KS_shp@data[i_new] = Variable_KS_shp@data[i]/Variable_KS_shp@data$Area_sqkm
Variable_KS_df[i_new] = Variable_KS_df$i/Variable_KS_df$Area_sqkm
}
for(i in c('Market','Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic")){
i_new = paste0(i, "_den")
Variable_KS_shp@data[i_new] = Variable_KS_shp@data[i]/Variable_KS_shp@data$Area_sqkm
Variable_KS_df[i_new] = Variable_KS_df$i/Variable_KS_df$Area_sqkm
}
col_X_scale =
c(
"Market_den","Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea", "Income_sta")
for (i in col_X_scale){
Variable_KS_df[i] <- scale(Variable_KS_df[i])
Variable_KS_shp@data[i] <-scale(Variable_KS_shp@data[i])
}
col_X =
c( "Cluster", # 分群
"Market_den","Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
col_X != "Cluster"
col_X(col_X != "Cluster")
col_X[col_X != "Cluster"]
for (i in col_X[col_X != "Cluster"]){
Variable_KS_df[i] <- scale(Variable_KS_df[i])
Variable_KS_shp@data[i] <-scale(Variable_KS_shp@data[i])
}
col_X =
c( "Cluster", # 分群
"Market_den","Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
corr = cor(Variable_KS_df[c(col_y,col_X)])
idx = abs(corr[,'Nt'])>.2
idx = abs(corr[,'Nt'])>.2
idx
for(i in c(col_X, col_y)){
Variable_KS_shp@data[i] = sapply(Variable_KS_shp@data[i], function(x) as.numeric(x))
Variable_KS_df[i] = sapply(Variable_KS_df[i], function(x) as.numeric(x))
}
for(i in c('Market','Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic")){
i_new = paste0(i, "_den")
Variable_KS_shp@data[i_new] = Variable_KS_shp@data[i]/Variable_KS_shp@data$Area_sqkm
Variable_KS_df[i_new] = Variable_KS_df[i]/Variable_KS_df$Area_sqkm
}
for (i in col_X[col_X != "Cluster"]){
Variable_KS_df[i] <- scale(Variable_KS_df[i])
Variable_KS_shp@data[i] <-scale(Variable_KS_shp@data[i])
}
col_X =
c( "Cluster", # 分群
"Market_den","Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
corr = cor(Variable_KS_df[c(col_y,col_X)])
idx = abs(corr[,'Nt'])>.2
col_X_02 = names(corr[idx,'Nt']) %>% tail(-1)
col_X_02
corr
col_X =
c( "Cluster", # 分群
"Market_den","Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
corr = cor(Variable_KS_df[c(col_y,col_X)])
idx = abs(corr[,'Nt'])>.2
col_X_02 = names(corr[idx,'Nt']) %>% tail(-1)
col_X_02
formula_Nt = Nt ~.
pca <- prcomp(formula_Nt,  #選擇變數
data = Variable_KS_df[c(col_X_02,col_y)],  # 資料
scale = TRUE)                          # 正規化資料
Variable_KS_df[c(col_X_02,col_y)]
data = Variable_KS_df[c(col_X_02,col_y)]
data
View(data)
class(data)
formula_PCA = ~.
data = Variable_KS_df[c(col_X_02,col_y)]
class(data)
pca <- prcomp(formula_Nt,  #選擇變數
data = Variable_KS_df[c(col_X_02,col_y)],  # 資料
scale = TRUE)                          # 正規化資料
pca <- prcomp(~.,  #選擇變數
data = Variable_KS_df[c(col_X_02,col_y)],  # 資料
scale = TRUE)                          # 正規化資料
print(pca$rotation)
pca <- prcomp(~.,  #選擇變數
data = Variable_KS_df[c(col_X_02)],  # 資料
scale = TRUE)                          # 正規化資料
print(pca$rotation)
plot(pca,         # 放pca
type="line", # 用直線連結每個點
main="Scree Plot for PCA") # 主標題
plot(pca,         # 放pca
type="line", # 用直線連結每個點
main="Scree Plot for PCA") # 主標題
plot(pca,         # 放pca
type="line", # 用直線連結每個點
main="Scree Plot for PCA") # 主標題
vars <- (pca$sdev)^2  # 從pca中取出標準差(pca$sdev)後再平方，計算variance(特徵值)
vars
# 從pca中取出標準差(pca$sdev)後再平方，計算variance(特徵值)
vars <- (pca$sdev)^2
# 計算每個主成分的解釋比例 = 各個主成分的特徵值/總特徵值
props <- vars / sum(vars)
print(props)
# 累加前n個元素的值
cumulative.props <- cumsum(props)  # 累加前n個元素的值
cumulative.props
plot(cumulative.props)
abline(h=.8, col="blue")
plot(cumulative.props)
abline(h=.8, col="blue")
plot(cumulative.props,type="line")
c(1:length(cumulative.props)
)
ggplot()+
geom_point(aes(x = c(1:length(cumulative.props)), y = cumulative.props))
pca$scale
pca$sdev
pca$x
pca$x[:4]
pca$x[,:3]
pca$rotation
top3.pca.eigenvector <- pca$rotation[, 1:3]
top3.pca.eigenvector
top3.pca.eigenvector
pca$rotation
top3.pca.eigenvector <- pca$rotation[, 1:3]
top3.pca.eigenvector
top3_pca.data <- pca$x[, 1:3]
top3_pca.data
top3_pca.data <- pca$x[, 1:3]
for(i in c(1:3)){
Variable_KS_shp@data[paste0("PC",i)] <- pca$x[, i]
Variable_KS_df[paste0("PC",i)] <- pca$x[, i]
}
col_PC = c()
col_PC = c()
for(i in c(1:3)){
col_PC[i] = paste0("PC",i)
Variable_KS_shp@data[paste0("PC",i)] <- pca$x[, i]
Variable_KS_df[paste0("PC",i)] <- pca$x[, i]
}
print(col_PC)
formula_Nt
negb <- glm.nb(Nt~., data = Variable_KS_df[c(col_PC, col_y)]) #negative binomial
#in the MASS package
zinb <- zeroinfl(Nt~.|.,
dist = "negbin", data = articles) #zero inflated nb, in the pscl package
glm.nb.model <- glm.nb(Nt~., data = Variable_KS_df[c(col_PC, col_y)]) #negative binomial
glm.nb.model
knitr::opts_chunk$set(echo = TRUE)
library(GWmodel)      ### GW models
library(GWmodel)      ### GW models
library(dplyr)
library(sp)           ## Data management
library(car)          ## vif
library(spdep)        ## Spatial autocorrelation
library(RColorBrewer) ## Visualization
library(classInt)     ## Class intervals
library(raster)       ## spatial data
library(grid)         # plot
library(gridExtra)    # Multiple plot
library(ggplot2)      # Multiple plot
library(gtable)
library(GGally)       # 相關係數圖矩陣（scatter plot matrix）
library(maptools)
library(MASS)
library(tmap)
getwd()
path = '..\\..\\Roaming-Dogs-Data\\'
Variable_KS_df <- read.csv(paste0(path, "@Test_KS\\Variable.csv" ), fileEncoding = 'utf-8')
Variable_KS_shp<-shapefile(paste0(path, "@Test_KS\\Variable.shp" ),encoding = 'big5')
Variable_KS_shp<-shapefile(paste0(path, "@Test_KS\\Variable.shp" ),encoding = 'big5')
Variable_KS_shp@data[is.na(Variable_KS_shp@data)] <- 0
Variable_KS_df[is.na(Variable_KS_df)] <- 0
col_y = c('Nr')
Variable_KS_shp@data[i_new] = Variable_KS_shp@data[i]/Variable_KS_shp@data$Area_sqkm
for(i in c(col_X, col_y)){
Variable_KS_shp@data[i] = sapply(Variable_KS_shp@data[i], function(x) as.numeric(x))
Variable_KS_df[i] = sapply(Variable_KS_df[i], function(x) as.numeric(x))
}
path = '..\\..\\Roaming-Dogs-Data\\'
Variable_KS_df <- read.csv(paste0(path, "@Test_KS\\Variable.csv" ), fileEncoding = 'utf-8')
Variable_KS_shp<-shapefile(paste0(path, "@Test_KS\\Variable.shp" ),encoding = 'big5')
Variable_KS_shp<-shapefile(paste0(path, "@Test_KS\\Variable.shp" ),encoding = 'big5')
Variable_KS_shp@data[is.na(Variable_KS_shp@data)] <- 0
Variable_KS_df[is.na(Variable_KS_df)] <- 0
col_X =
c( "Cluster", # 分群
"Market","Hospital","Clinic", "Temple", "Ele","Junior" ,"Senior", "Train.stat", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta") # 村里收入
col_y = c('Nr')
for(i in c(col_X, col_y)){
Variable_KS_shp@data[i] = sapply(Variable_KS_shp@data[i], function(x) as.numeric(x))
Variable_KS_df[i] = sapply(Variable_KS_df[i], function(x) as.numeric(x))
}
for(i in c('Market','Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic")){
i_new = paste0(i, "_den")
Variable_KS_shp@data[i_new] = Variable_KS_shp@data[i]/Variable_KS_shp@data$Area_sqkm
Variable_KS_df[i_new] = Variable_KS_df[i]/Variable_KS_df$Area_sqkm
}
for (i in col_X[col_X != "Cluster"]){
Variable_KS_df[i] <- scale(Variable_KS_df[i])
Variable_KS_shp@data[i] <-scale(Variable_KS_shp@data[i])
}
col_X =
c( "Cluster", # 分群
"Market_den","Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
corr = cor(Variable_KS_df[c(col_y,col_X)])
idx = abs(corr[,'Nt'])>.2
col_X_02 = names(corr[idx,'Nt']) %>% tail(-1)
corr = cor(Variable_KS_df[c(col_y,col_X)])
idx = abs(corr[,'Nt'])>.2
idx = abs(corr[,col_y])>.2
col_X_02 = names(corr[idx,col_y]) %>% tail(-1)
col_X_02
corr
idx = abs(corr[,col_y])>.1
col_X_02 = names(corr[idx,col_y]) %>% tail(-1)
col_X_02
data = Variable_KS_df[c(col_X_02,col_y)]
class(data)
pca <- prcomp(~.,  #選擇變數
data = Variable_KS_df[c(col_X_02)],  # 資料
scale = TRUE)                          # 正規化資料
plot(pca,         # 放pca
type="line", # 用直線連結每個點
main="Scree Plot for PCA") # 主標題
# 從pca中取出標準差(pca$sdev)後再平方，計算variance(特徵值)
vars <- (pca$sdev)^2
# 從pca中取出標準差(pca$sdev)後再平方，計算variance(特徵值)
vars <- (pca$sdev)^2
# 計算每個主成分的解釋比例 = 各個主成分的特徵值/總特徵值
props <- vars / sum(vars)
print(props)
# 累加前n個元素的值
cumulative.props <- cumsum(props)  # 累加前n個元素的值
cumulative.props
ggplot()+
geom_point(aes(x = c(1:length(cumulative.props)), y = cumulative.props))+
ggtitle()
ggplot()+
geom_point(aes(x = c(1:length(cumulative.props)), y = cumulative.props))+
ggtitle("累積解釋圖")
glm.nb.model <- glm.nb(Nt~., data = Variable_KS_df[c(col_PC, col_y)]) #negative binomial
col_PC = c()
for(i in c(1:3)){
col_PC[i] = paste0("PC",i)
Variable_KS_shp@data[paste0("PC",i)] <- pca$x[, i]
Variable_KS_df[paste0("PC",i)] <- pca$x[, i]
}
glm.nb.model <- glm.nb(Nt~., data = Variable_KS_df[c(col_PC, col_y)]) #negative binomial
glm.nb.model <- glm.nb(Nr~., data = Variable_KS_df[c(col_PC, col_y)]) #negative binomial
summary(glm.nb.model)
col_PC = c()
col_PC = c()
for(i in c(1:4)){
col_PC[i] = paste0("PC",i)
Variable_KS_shp@data[paste0("PC",i)] <- pca$x[, i]
Variable_KS_df[paste0("PC",i)] <- pca$x[, i]
}
glm.nb.model <- glm.nb(Nr~., data = Variable_KS_df[c(col_PC, col_y)]) #negative binomial
glm.nb.model <- glm.nb(Nr~., data = Variable_KS_df[c(col_PC, col_y)]) #negative binomial
summary(glm.nb.model)
pdf_plot(glm.nb.model$residuals)
ggplot(Variable_KS_df)+
geom_point(aes(x = X, y = Y, color = glm.nb.model$residuals))
bw <- bw.ggwr(Nr~.,
data = Variable_KS_shp[c(col_PC, col_y)],
family = "poisson",
approach = "AICc",
kernel = "gaussian",
adaptive = TRUE,
dMat = DM )
col_y
col_PC
DM<-gw.dist(dp.locat=data.matrix(((Variable_KS_df[c('X', "Y")]))))
DM
bw <- bw.ggwr(Nr~.,
data = Variable_KS_shp[c(col_PC, col_y)],
family = "poisson",
approach = "AICc",
kernel = "gaussian",
adaptive = TRUE,
dMat = DM )
bw
bw <- bw.ggwr(Nr~.,
data = Variable_KS_shp[c(col_PC, col_y)],
family = "poisson",
approach = "AICc",
kernel = "gaussian",
adaptive = TRUE,
dMat = DM )
Variable_KS_shp[c(col_PC, col_y)]
bw <- bw.ggwr(Nr~.,
data = Variable_KS_df[c(col_PC, col_y)],
family = "poisson",
approach = "AICc",
kernel = "gaussian",
adaptive = TRUE,
dMat = DM )
formula.PC = Nr~PC1+PC2+PC3+PC4
bw <- bw.ggwr(formula.PC,
data = Variable_KS_shp,
family = "poisson",
approach = "AICc",
kernel = "gaussian",
adaptive = TRUE,
dMat = DM )
for(i in c(1:3)){
col_PC[i] = paste0("PC",i)
Variable_KS_shp@data[paste0("PC",i)] <- pca$x[, i]
Variable_KS_df[paste0("PC",i)] <- pca$x[, i]
}
glm.nb.model <- glm.nb(Nr~., data = Variable_KS_df[c(col_PC, col_y)]) #negative binomial
pdf_plot(glm.nb.model$residuals)
summary(glm.nb.model)
col_PC = c()
for(i in c(1:3)){
col_PC[i] = paste0("PC",i)
Variable_KS_shp@data[paste0("PC",i)] <- pca$x[, i]
Variable_KS_df[paste0("PC",i)] <- pca$x[, i]
}
glm.nb.model <- glm.nb(Nr~., data = Variable_KS_df[c(col_PC, col_y)]) #negative binomial
summary(glm.nb.model)
pdf_plot(glm.nb.model$residuals)
ggplot(Variable_KS_df)+
geom_point(aes(x = X, y = Y, color = glm.nb.model$residuals))
for(i in c(1:4)){
col_PC[i] = paste0("PC",i)
Variable_KS_shp@data[paste0("PC",i)] <- pca$x[, i]
Variable_KS_df[paste0("PC",i)] <- pca$x[, i]
}
glm.nb.model <- glm.nb(Nr~., data = Variable_KS_df[c(col_PC, col_y)]) #negative binomial
summary(glm.nb.model)
pdf_plot(glm.nb.model$residuals)
ggplot(Variable_KS_df)+
geom_point(aes(x = X, y = Y, color = glm.nb.model$residuals))
