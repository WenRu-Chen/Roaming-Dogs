xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
ggpubr::ggarrange(p1,p2,p3,p4)
# spaMM_fitting
corr = "Cauchy"
spa_random = sprintf("%s(1|X+Y)", corr)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
counties = "彰化縣"
idx.county = Variable_shp@data$COUNTYNAME == counties
var_X = "P_DEN + AGING_IDX + Income_mea +offset(log(Area_sqkm))"
var_X = "1 +offset(log(Area_sqkm))"
# high_rat +M_F_RAT+
counties = "彰化縣"
idx.county = Variable_shp@data$COUNTYNAME == counties
# var_X = "P_DEN + AGING_IDX + Income_mea +offset(log(Area_sqkm))"
var_X = "1 +offset(log(Area_sqkm))"
# high_rat +M_F_RAT+
f = as.formula(paste("Nr ~", var_X))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
# spaMM_fitting
corr = "Cauchy"
spa_random = sprintf("%s(1|X+Y)", corr)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
# spaMM_fitting
corr = "Matern"
spa_random = sprintf("%s(1|X+Y)", corr)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
counties = "彰化縣"
idx.county = Variable_shp@data$COUNTYNAME == counties
# var_X = "P_DEN + AGING_IDX + Income_mea +offset(log(Area_sqkm))"
var_X = "Culter +offset(log(Area_sqkm))"
# high_rat +M_F_RAT+
f = as.formula(paste("Nr ~", var_X))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
counties = "彰化縣"
idx.county = Variable_shp@data$COUNTYNAME == counties
# var_X = "P_DEN + AGING_IDX + Income_mea +offset(log(Area_sqkm))"
var_X = "Cluter +offset(log(Area_sqkm))"
# high_rat +M_F_RAT+
f = as.formula(paste("Nr ~", var_X))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
f
col_X
counties = "彰化縣"
idx.county = Variable_shp@data$COUNTYNAME == counties
# var_X = "P_DEN + AGING_IDX + Income_mea +offset(log(Area_sqkm))"
var_X = "Cluster +offset(log(Area_sqkm))"
# high_rat +M_F_RAT+
f = as.formula(paste("Nr ~", var_X))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
# spaMM_fitting
corr = "Cauchy"
spa_random = sprintf("%s(1|X+Y)", corr)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
# spaMM_fitting
corr = "Matern"
spa_random = sprintf("%s(1|X+Y)", corr)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
DM<-gw.dist(dp.locat=data.matrix(((Variable_df[idx.county, c('X', "Y")]))))
# bw.gwr <- bw.ggwr(f,
#                  data = Variable_shp[c(col_X_03, col_y, "Area_sqkm")],
#                  family = "poisson",
#                  approach = "AICc",
#                  kernel = "gaussian",
#                  adaptive = TRUE,
#                  dMat = DM )
core.HR = mean(.3+.3+.33+.25)*10000; ext.HR = mean(7.7+5.7+5.7+5.6)*10000
core.bw.gwr = (core.HR/pi)^.5; ext.bw.gwr = (ext.HR/pi)^.5;
gwr.PO <- ggwr.basic(Nr ~ Cluster + offset(log(Area_sqkm)),
data =Variable_shp[idx.county, c("Cluster","P_H_CNT", "Nr", "Area_sqkm")],
family = "poisson",
bw = ext.bw.gwr,
kernel = "gaussian",
adaptive = TRUE,
dMat = DM)
gwr.PO$SDF %>%  summary()
res.pear = (Variable_df[idx.county,"Nr"]-gwr.PO$SDF$yhat)/(gwr.PO$SDF$yhat)^.5
resid(gwr.PO$SDF, type = "std_dev_res")
summary(gwr.PO$SDF)
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
# spaMM_fitting
corr = "Matern"
spa_random = sprintf("%s(1|X+Y)", corr)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting
corr = "Cauchy"
spa_random = sprintf("%s(1|X+Y)", corr)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
counties = "彰化縣"
idx.county = Variable_shp@data$COUNTYNAME == counties
# var_X = "P_DEN + AGING_IDX + Income_mea +offset(log(Area_sqkm))"
var_X = "Cluster +offset(log(Area_sqkm))"
# high_rat +M_F_RAT+
f = as.formula(paste("Nr ~", var_X))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
# spaMM_fitting
corr = "Cauchy"
spa_random = sprintf("%s(1|X+Y)", corr)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting
corr = "Cauchy"; col_X_03_02 = "Cluster"
spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
counties = "彰化縣"
idx.county = Variable_shp@data$COUNTYNAME == counties
# var_X = "P_DEN + AGING_IDX + Income_mea +offset(log(Area_sqkm))"
var_X = "1 +offset(log(Area_sqkm))"
# high_rat +M_F_RAT+
f = as.formula(paste("Nr ~", var_X))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
# spaMM_fitting
corr = "Cauchy"; col_X_03_02 = "Cluster"
spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
# spaMM_fitting
corr = "Matern"
spa_random = sprintf("%s(1|X+Y)", corr)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
# spaMM_fitting
corr = "Matern"; col_X_03_02 = "Cluster"
spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting
corr = "Matern"; col_X_03_02 = "Cluster"
spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
# spaMM_fitting
corr = "Cauchy"; col_X_03_02 = "Cluster"
spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
# spaMM_fitting
corr = "Matern"; col_X_03_02 = "Cluster"
spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
counties = "臺中市"
idx.county = Variable_shp@data$COUNTYNAME == counties
# var_X = "P_DEN + AGING_IDX + Income_mea +offset(log(Area_sqkm))"
var_X = "1 +offset(log(Area_sqkm))"
# high_rat +M_F_RAT+
f = as.formula(paste("Nr ~", var_X))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
# spaMM_fitting
corr = "Cauchy"; col_X_03_02 = "Cluster"
spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
# spaMM_fitting
corr = "Matern"; col_X_03_02 = "Cluster"
spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family = negbin())
glmm_ComPo %>% summary
# spaMM_fitting_plot
fit = predict(glmm_ComPo,type = "response")
res.res = residuals(glmm_ComPo,  type = "response")
std.res = residuals(glmm_ComPo,  type = "std_dev_res")
p1 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p2 = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(std.res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_res residuals")+  ggtitle(sprintf("%s %s",corr,counties), subtitle =  TeX("$\\hat{Nr}$ vs. residuals"))
p3 = ggplot()+geom_histogram(aes(x = as.vector(res.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(res.res), y = ..density..))+
xlab("response residuals")+ggtitle(sprintf("%s %s",corr,counties))
p4 = ggplot()+geom_histogram(aes(x = as.vector(std.res), y = ..density..), bins = 15)+
geom_density(aes(x = as.vector(std.res), y = ..density..))+
xlab("std_dev_res residuals")+ggtitle(sprintf("%s %s",corr,counties))
ggpubr::ggarrange(p1,p2,p3,p4)
