}
set.seed(123)
arguments <- expand.grid(
df = c(2.5, 5, 20),
n_knots = 15,
n_draws = c(5, 15, 25),
gp_theta = 1,
gp_sigma = 1,
sd_obs = c(0.1, 0.6, 1.2)
)
nrow(arguments)
arguments$count <- 100L
arguments <- arguments[rep(seq_len(nrow(arguments)), arguments$count), ]
arguments_apply <- dplyr::select(arguments,-count)
nrow(arguments_apply)
system.time({
out <- plyr::mdply(arguments_apply, sim_fit)
})
saveRDS(out, file = "sim/mvt-norm-sim-testing2.rds")
out <- readRDS("sim/mvt-norm-sim-testing2.rds")
slider(0.05, 10, 1, step = 0.25)
slider(2, 50, 4, step = 1)
message(1)
500L
# ------------------------------------------------------------
# Pick reasonable values:
if (interactive()) {
library(manipulate)
manipulate({
set.seed(seed)
simulation_data <- sim_glmmfields(df = df, n_data_points = 50, seed = NULL,
n_draws = 6, n_knots = 7, gp_theta = gp_theta, gp_sigma = gp_sigma,
obs_error = "gamma", sd_obs = CV)
print(simulation_data$plot)
}, gp_theta = slider(0.05, 10, 1, step = 0.25),
gp_sigma = slider(0.05, 10, 0.5, step = 0.25),
df = slider(2, 50, 4, step = 1),
CV = slider(0.01, 1, 0.05, step = 0.05),
seed = slider(1, 300, 10, step = 1))
}
# ------------------------------------------------------------
# Pick reasonable values:
if (interactive()) {
library(manipulate)
manipulate({
set.seed(seed)
simulation_data <- sim_glmmfields(df = df, n_data_points = 50, seed = NULL,
n_draws = 1, n_knots = 7, gp_theta = gp_theta, gp_sigma = gp_sigma,
obs_error = "gamma", sd_obs = CV)
print(simulation_data$plot)
}, gp_theta = slider(0.05, 10, 1, step = 0.25),
gp_sigma = slider(0.05, 10, 0.5, step = 0.25),
df = slider(2, 50, 4, step = 1),
CV = slider(0.01, 1, 0.05, step = 0.05),
seed = slider(1, 300, 10, step = 1))
}
gp_theta
interactive()
??interactive
??manipulate
slider(5, 10)
s = slider(5, 10)
s$initialValue
# ------------------------------------------------------------
# Pick reasonable values:
if (interactive()) {
library(manipulate)
manipulate({
set.seed(seed)
simulation_data <- sim_glmmfields(df = df, n_data_points = 50, seed = NULL,
n_draws = 6, n_knots = 7, gp_theta = gp_theta, gp_sigma = gp_sigma,
obs_error = "gamma", sd_obs = CV)
print(simulation_data$plot)
}, gp_theta = slider(0.05, 10, 1, step = 0.25),
gp_sigma = slider(0.05, 10, 0.5, step = 0.25),
df = slider(2, 50, 4, step = 1),
CV = slider(0.01, 1, 0.05, step = 0.05),
seed = slider(1, 300, 10, step = 1))
}
gp_sigma
# ------------------------------------------------------------
# Pick reasonable values:
if (interactive()) {
library(manipulate)
manipulate({
set.seed(seed)
simulation_data <- sim_glmmfields(df = df, n_data_points = 50, seed = NULL,
n_draws = 6, n_knots = 7, gp_theta = gp_theta, gp_sigma = gp_sigma,
obs_error = "gamma", sd_obs = CV)
print(simulation_data$plot)
}, gp_theta = slider(0.05, 10, 1, step = 0.25),
gp_sigma = slider(0.05, 10, 0.5, step = 0.25),
df = slider(2, 50, 4, step = 1),
CV = slider(0.01, 1, 0.05, step = 0.05),
seed = slider(1, 300, 10, step = 1))
}
library(glmmfields)
library(ggsidekick)
library(tidyverse)
theme_set(theme_sleek())
# Original code ####
set.seed(1)
x <- sim_glmmfields(df = 99, n_data_points = 30, seed = NULL,
n_draws = 1, n_knots = 8, gp_theta = 0.5, gp_sigma = 1,
sd_obs = 0.01, obs_error = "normal")
initialize_plot <- function(title = "", cex = 0.7) {
plot(x$dat$lon, x$dat$lat, type = "n", ann = FALSE, axes = FALSE)
box(col = "grey50")
mtext(title, cex = cex, line = 0.15, col = "grey30")
}
plot_data <- function(pch = 21, col = "grey30", cex = 1) {
points(x$dat$lon, x$dat$lat, pch = pch, col = col, cex = cex)
}
plot_knots <- function() {
points(x$knots[,1], x$knots[,2], col = "red", pch = 19, cex = 1.1)
}
plot_covariance <- function() {
for (i in seq_len(nrow(x$knot))) {
for (j in seq_len(nrow(x$dat))) {
segments(x0 = x$knots[i,1], y0 = x$knots[i,2],
x1 = x$dat$lon[j], y1 = x$dat$lat[j], col = "#00000020")
}
}
}
width <- 5.5
golden_ratio <- (1+sqrt(5))/2
pdf("figs/pp-illustration.pdf", width = width,
height = width / golden_ratio)
par(mfrow = c(2, 3), mar = c(0, 0, 2.9, 0), oma = c(1, 3, 0, 1),
cex = 0.6)
initialize_plot("Observe spatial data")
plot_data()
mtext("Before fitting model", side = 2, cex = 0.7, line = 0.3,
col = "grey30")
initialize_plot("Select knot locations")
plot_data()
plot_knots()
initialize_plot("Calculate knot-data covariance")
plot_data()
plot_knots()
plot_covariance()
initialize_plot("Model knot values\nas random field")
plot_knots()
mtext("Model fitting process", side = 2, cex = 0.7, line = 0.3,
col = "grey30")
initialize_plot("Project knot values to data\nlocations with knot-data covariance")
plot_data(pch = 4, cex = 1.3)
plot_knots()
plot_covariance()
initialize_plot("Evaluate likelihood")
plot_data(col = "#00000080")
plot_data(pch = 4, cex = 1.3, col = "#00000080")
# dev.off()
# Poisson ####
set.seed(1)
x <- sim_glmmfields(df = 99, n_data_points = 100, seed = NULL,
n_draws = 1, n_knots = 10, gp_theta = 0.5, gp_sigma = 1,
sd_obs = 0.01, obs_error = "poisson")
initialize_plot <- function(title = "", cex = 0.7) {
plot(x$dat$lon, x$dat$lat, type = "n", ann = FALSE, axes = FALSE)
box(col = "grey50")
mtext(title, cex = cex, line = 0.15, col = "grey30")
}
plot_data <- function(pch = 21, col = "grey30", cex = 1) {
points(x$dat$lon, x$dat$lat, pch = pch, col = col, cex = cex)
}
plot_knots <- function() {
points(x$knots[,1], x$knots[,2], col = "red", pch = 19, cex = 1.1)
}
plot_covariance <- function() {
for (i in seq_len(nrow(x$knot))) {
for (j in seq_len(nrow(x$dat))) {
segments(x0 = x$knots[i,1], y0 = x$knots[i,2],
x1 = x$dat$lon[j], y1 = x$dat$lat[j], col = "#00000020")
}
}
}
width <- 5.5
golden_ratio <- (1+sqrt(5))/2
pdf("figs/pp-illustration.pdf", width = width,
height = width / golden_ratio)
par(mfrow = c(2, 3), mar = c(0, 0, 2.9, 0), oma = c(1, 3, 0, 1),
cex = 0.6)
initialize_plot("Observe spatial data")
plot_data()
mtext("Before fitting model", side = 2, cex = 0.7, line = 0.3,
col = "grey30")
initialize_plot("Select knot locations")
plot_data()
plot_knots()
initialize_plot("Calculate knot-data covariance")
plot_data()
plot_knots()
plot_covariance()
initialize_plot("Model knot values\nas random field")
plot_knots()
mtext("Model fitting process", side = 2, cex = 0.7, line = 0.3,
col = "grey30")
initialize_plot("Project knot values to data\nlocations with knot-data covariance")
plot_data(pch = 4, cex = 1.3)
plot_knots()
plot_covariance()
initialize_plot("Evaluate likelihood")
plot_data(col = "#00000080")
plot_data(pch = 4, cex = 1.3, col = "#00000080")
# dev.off()
library(dplyr)
library(ggplot2)
library(ggsidekick) # devtools::install_github("seananderson/ggsidekick")
library(glmmfields)
g <- expand.grid(lon = seq(1, 10, 0.5),  #所有的組合都來一遍
lat = seq(1, 10, 0.5))
exp_cor <- function(delta_ij, phi) {
exp(-phi * delta_ij)
}
exp_cor
draws <- lapply(c(2, 1e9),
function(x) {
g <- expand.grid(lon = seq(1, 10, length.out = 25),
lat = seq(1, 10, length.out = 25))
draws <- 3
s <- glmmfields::sim_glmmfields(df = x, n_draws = draws,
gp_theta = 1.6, gp_sigma = 0.3, n_knots = 30, seed = 9,
g = g, n_data_points = nrow(g))
out <- reshape2::melt(s$proj)
names(out) <- c("i", "pt", "re")
out <- arrange(out, i, pt)
out$nu <- x
out$lon <- rep(g$lon, draws)
out$lat <- rep(g$lat, draws)
out
}) %>% bind_rows()
draws <- mutate(draws, i = paste("Draw", i))
labels <- tibble::tibble(
nu = c(2, 1e9),
nu_lab = c("MVT, v = 2", "MVN")
)
draws <- inner_join(draws, labels, by = "nu")
p <- draws %>%
ggplot(aes(x = lon, y = lat, z = re, fill = re)) +
facet_grid(nu_lab~i) +
geom_raster() +
viridis::scale_fill_viridis(option = "C") +
theme_sleek() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()) +
theme(panel.spacing = unit(-0.15, "lines"))
p
seq(1, 10, 0.5)
draws <- lapply(c(2, 1e9),
function(x) {
g <- expand.grid(lon = seq(1, 10, length.out = 25),
lat = seq(1, 10, length.out = 25))
draws <- 3
s <- glmmfields::sim_glmmfields(df = x, n_draws = draws,
gp_theta = 1.6, gp_sigma = 0.3, n_knots = 30, seed = 9,
g = g, n_data_points = nrow(g))
out <- reshape2::melt(s$proj)
names(out) <- c("i", "pt", "re")
out <- arrange(out, i, pt)
out$nu <- x
out$lon <- rep(g$lon, draws)
out$lat <- rep(g$lat, draws)
out
}) %>% bind_rows()
draws <- lapply(c(2, 1e9),
function(x) {
g <- expand.grid(lon = seq(1, 10, length.out = 25),
lat = seq(1, 10, length.out = 25))
draws <- 3
s <- glmmfields::sim_glmmfields(df = x, n_draws = draws,
gp_theta = 0.6, gp_sigma = 0.3, n_knots = 30, seed = 9,
g = g, n_data_points = nrow(g))
out <- reshape2::melt(s$proj)
names(out) <- c("i", "pt", "re")
out <- arrange(out, i, pt)
out$nu <- x
out$lon <- rep(g$lon, draws)
out$lat <- rep(g$lat, draws)
out
}) %>% bind_rows()
draws <- mutate(draws, i = paste("Draw", i))
labels <- tibble::tibble(
nu = c(2, 1e9),
nu_lab = c("MVT, v = 2", "MVN")
)
draws <- inner_join(draws, labels, by = "nu")
p <- draws %>%
ggplot(aes(x = lon, y = lat, z = re, fill = re)) +
facet_grid(nu_lab~i) +
geom_raster() +
viridis::scale_fill_viridis(option = "C") +
theme_sleek() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()) +
theme(panel.spacing = unit(-0.15, "lines"))
p
g <- expand.grid(lon = seq(1, 50, 0.5),  #所有的組合都來一遍
lat = seq(1, 50, 0.5))
exp_cor <- function(delta_ij, phi) {
exp(-phi * delta_ij)
}
draws <- lapply(c(2, 1e9),
function(x) {
g <- expand.grid(lon = seq(1, 10, length.out = 25),
lat = seq(1, 10, length.out = 25))
draws <- 3
s <- glmmfields::sim_glmmfields(df = x, n_draws = draws,
gp_theta = 0.6, gp_sigma = 0.3, n_knots = 30, seed = 9,
g = g, n_data_points = nrow(g))
out <- reshape2::melt(s$proj)
names(out) <- c("i", "pt", "re")
out <- arrange(out, i, pt)
out$nu <- x
out$lon <- rep(g$lon, draws)
out$lat <- rep(g$lat, draws)
out
}) %>% bind_rows()
draws <- mutate(draws, i = paste("Draw", i))
labels <- tibble::tibble(
nu = c(2, 1e9),
nu_lab = c("MVT, v = 2", "MVN")
)
draws <- inner_join(draws, labels, by = "nu")
p <- draws %>%
ggplot(aes(x = lon, y = lat, z = re, fill = re)) +
facet_grid(nu_lab~i) +
geom_raster() +
viridis::scale_fill_viridis(option = "C") +
theme_sleek() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()) +
theme(panel.spacing = unit(-0.15, "lines"))
p
draws <- lapply(c(2, 1e9),
function(x) {
g <- expand.grid(lon = seq(1, 10, length.out = 25),
lat = seq(1, 10, length.out = 25))
draws <- 1
s <- glmmfields::sim_glmmfields(df = x, n_draws = draws,
gp_theta = 0.6, gp_sigma = 0.3, n_knots = 30, seed = 9,
g = g, n_data_points = nrow(g))
out <- reshape2::melt(s$proj)
names(out) <- c("i", "pt", "re")
out <- arrange(out, i, pt)
out$nu <- x
out$lon <- rep(g$lon, draws)
out$lat <- rep(g$lat, draws)
out
}) %>% bind_rows()
draws <- mutate(draws, i = paste("Draw", i))
labels <- tibble::tibble(
nu = c(2, 1e9),
nu_lab = c("MVT, v = 2", "MVN")
)
draws <- inner_join(draws, labels, by = "nu")
p <- draws %>%
ggplot(aes(x = lon, y = lat, z = re, fill = re)) +
facet_grid(nu_lab~i) +
geom_raster() +
viridis::scale_fill_viridis(option = "C") +
theme_sleek() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()) +
theme(panel.spacing = unit(-0.15, "lines"))
p
seq(1, 50, length.out = 25)
seq(1, 10, length.out = 50)
draws <- lapply(c(2, 1e9),
function(x) {
g <- expand.grid(lon = seq(1, 10, length.out = 50),
lat = seq(1, 10, length.out = 50))
draws <- 1
s <- glmmfields::sim_glmmfields(df = x, n_draws = draws,
gp_theta = 0.6, gp_sigma = 0.3, n_knots = 30, seed = 9,
g = g, n_data_points = nrow(g))
out <- reshape2::melt(s$proj)
names(out) <- c("i", "pt", "re")
out <- arrange(out, i, pt)
out$nu <- x
out$lon <- rep(g$lon, draws)
out$lat <- rep(g$lat, draws)
out
}) %>% bind_rows()
draws <- mutate(draws, i = paste("Draw", i))
labels <- tibble::tibble(
nu = c(2, 1e9),
nu_lab = c("MVT, v = 2", "MVN")
)
draws <- inner_join(draws, labels, by = "nu")
p <- draws %>%
ggplot(aes(x = lon, y = lat, z = re, fill = re)) +
facet_grid(nu_lab~i) +
geom_raster() +
viridis::scale_fill_viridis(option = "C") +
theme_sleek() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()) +
theme(panel.spacing = unit(-0.15, "lines"))
p
p <- draws %>%
ggplot(aes(x = lon, y = lat, z = re, fill = re)) +
facet_grid(nu_lab~i) +
geom_raster() +
viridis::scale_fill_viridis(option = "C") +
theme_sleek() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()) +
theme(panel.spacing = unit(-0.15, "lines"))
p
draws <- lapply(c(2, 1e9),
function(x) {
g <- expand.grid(lon = seq(1, 10, length.out = 50),
lat = seq(1, 10, length.out = 50))
draws <- 1
s <- glmmfields::sim_glmmfields(df = x, n_draws = draws,
gp_theta = 0.6, gp_sigma = 0.3, n_knots = 30, seed = 9,
g = g, n_data_points = nrow(g))
out <- reshape2::melt(s$proj)
names(out) <- c("i", "pt", "re")
out <- arrange(out, i, pt)
out$nu <- x
out$lon <- rep(g$lon, draws)
out$lat <- rep(g$lat, draws)
out
}) %>% bind_rows()
draws <- mutate(draws, i = paste("Draw", i))
labels <- tibble::tibble(
nu = c(2, 1e9),
nu_lab = c("MVT, v = 2", "MVN")
)
draws <- inner_join(draws, labels, by = "nu")
p <- draws %>%
ggplot(aes(x = lon, y = lat, z = re, fill = re)) +
facet_grid(nu_lab~i) +
geom_raster() +
viridis::scale_fill_viridis(option = "C") +
theme_sleek() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()) +
theme(panel.spacing = unit(-0.15, "lines"))
p
