col_y= c('Nr_den')
pdf_plot(Variable_KS_df$Nr_den)+xlab("density of Nr")
corr = cor(Variable_KS_df[c(col_y,col_X)])
idx = abs(corr[,col_y])>
col_X_02 = names(corr[idx,col_y]) %>% tail(-1)
corr = cor(Variable_KS_df[c(col_y,col_X)])
idx = abs(corr[,col_y])>.1
col_X_02 = names(corr[idx,col_y]) %>% tail(-1)
corr[idx,idx]
# Variable_KS_df <- read.csv(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ), fileEncoding = 'utf-8')
Variable_KS_shp<-shapefile(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ),encoding = 'big5')
# Variable_df <- read.csv(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ), fileEncoding = 'utf-8')
Variable_shp<-shapefile(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ),encoding = 'big5')
Variable_shp@data[is.na(Variable_shp@data)] <- 0
Variable_df[is.na(Variable_df)] <- 0
Variable_shp@data$Nr = Variable_shp@data$Nr %>% as.integer()
Variable_df = Variable_shp@data
col_X =
c( "Cluster", # 分群
"Market","Hospital","Clinic", "Temple", "Ele","Junior" ,"Senior", "Train.stat", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta") # 村里收入
col_y = c('Nr')
for(i in c(col_X, col_y)){
Variable_shp@data[i] = sapply(Variable_shp@data[i], function(x) as.numeric(x))
Variable_df[i] = sapply(Variable_df[i], function(x) as.numeric(x))
}
Variable_shp@data
col_X =
c( "Cluster", # 分群
"Hospital","Clinic", "Temple", "Ele","Junior" ,"Senior", "Train.stat", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta") # 村里收入
col_y = c('Nr')
for(i in c(col_X, col_y)){
Variable_shp@data[i] = sapply(Variable_shp@data[i], function(x) as.numeric(x))
Variable_df[i] = sapply(Variable_df[i], function(x) as.numeric(x))
}
for(i in c('Market','Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic","Nr")){
i_new = paste0(i, "_den")
Variable_shp@data[i_new] = Variable_shp@data[i]/Variable_shp@data$Area_sqkm
Variable_df[i_new] = Variable_df[i]/Variable_df$Area_sqkm
}
for(i in c('Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic","Nr")){
i_new = paste0(i, "_den")
Variable_shp@data[i_new] = Variable_shp@data[i]/Variable_shp@data$Area_sqkm
Variable_df[i_new] = Variable_df[i]/Variable_df$Area_sqkm
}
for (i in col_X[col_X != "Cluster"]){
Variable_df[i] <- scale(Variable_df[i])
Variable_shp@data[i] <-scale(Variable_shp@data[i])
}
col_X =
c( "Cluster", # 分群
"Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"high_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
col_y= c('Nr_den')
pdf_plot(Variable_df$Nr_den)+xlab("density of Nr")
View(Variable_df)
# Variable_df <- read.csv(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ), fileEncoding = 'utf-8')
Variable_shp<-shapefile(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ),encoding = 'utf-8')
View(Variable_KS_shp)
View(Variable_shp)
Variable_shp@data[is.na(Variable_shp@data)] <- 0
Variable_shp@data$Nr = Variable_shp@data$Nr %>% as.integer()
Variable_df = Variable_shp@data
View(Variable_df)
col_X =
c( "Cluster", # 分群
"Hospital","Clinic", "Temple", "Ele","Junior" ,"Senior", "Train.stat", # 公共建設
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta") # 村里收入
col_y = c('Nr')
for(i in c(col_X, col_y)){
Variable_shp@data[i] = sapply(Variable_shp@data[i], function(x) as.numeric(x))
Variable_df[i] = sapply(Variable_df[i], function(x) as.numeric(x))
}
for(i in c('Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic","Nr")){
i_new = paste0(i, "_den")
Variable_shp@data[i_new] = Variable_shp@data[i]/Variable_shp@data$Area_sqkm
Variable_df[i_new] = Variable_df[i]/Variable_df$Area_sqkm
}
for (i in col_X[col_X != "Cluster"]){
Variable_df[i] <- scale(Variable_df[i])
Variable_shp@data[i] <-scale(Variable_shp@data[i])
}
col_X =
c( "Cluster", # 分群
"Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"high_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
col_y= c('Nr_den')
pdf_plot(Variable_df$Nr_den)+xlab("density of Nr")
arrange(Variable_df[c("COUNTYNAME","TOWNNAME","VILLNAME",col_y)], Nr_den)
pdf_plot(log(Variable_df$Nr_den))+xlab("density of Nr")
pdf_plot(log(Variable_df$Nr_den+1))+xlab("density of Nr")
corr = cor(Variable_df[c(col_y,col_X)])
idx = abs(corr[,col_y])>.1
col_X_02 = names(corr[idx,col_y]) %>% tail(-1)
col_X_02
idx = abs(corr[,col_y])>.05
col_X_02 = names(corr[idx,col_y]) %>% tail(-1)
col_X_02
corr[idx,idx]
data = Variable_df[c(col_X_02,col_y)]
class(data)
pca <- prcomp(~.,  #選擇變數
data = Variable_df[c(col_X_02)],  # 資料
scale = TRUE)                          # 正規化資料
plot(pca,         # 放pca
type="line", # 用直線連結每個點
main="Scree Plot for PCA") # 主標題
# 從pca中取出標準差(pca$sdev)後再平方，計算variance(特徵值)
vars <- (pca$sdev)^2
# 計算每個主成分的解釋比例 = 各個主成分的特徵值/總特徵值
props <- vars / sum(vars)
print(props)
# 累加前n個元素的值
cumulative.props <- cumsum(props)  # 累加前n個元素的值
cumulative.props
ggplot()+
geom_point(aes(x = c(1:length(cumulative.props)), y = cumulative.props))+
ggtitle("累積解釋圖")
col_PC = c()
for(i in c(1:4)){
col_PC[i] = paste0("PC",i)
Variable_shp@data[paste0("PC",i)] <- pca$x[, i]
Variable_df[paste0("PC",i)] <- pca$x[, i]
}
glm.nb.model <- glm.nb(Nr_den~., data = Variable_df[c(col_PC, col_y)]) #negative binomial
summary(glm.nb.model)
pdf_plot(glm.nb.model$residuals)
ggplot(Variable_df)+
geom_point(aes(x = X, y = Y, color = glm.nb.model$residuals))
lm.model <- lm(log(Nr_den)~., data = Variable_df[c(col_PC, col_y)]) #negative binomial
lm.model <- lm(log(Nr_den+1)~., data = Variable_df[c(col_PC, col_y)]) #negative binomial
summary(glm.nb.model)
summary(lm.model)
lm.model <- lm(log(Nr_den+1)~., data = Variable_df[c(col_PC, col_y)]) #negative binomial
summary(lm.model)
pdf_plot(glm.nb.model$residuals)
pdf_plot(lm.model$residuals)
ggplot(Variable_df)+
geom_point(aes(x = X, y = Y, color = lm.model$residuals))
f = log(Nr_den+1)~.
DM <- gw.dist(dp.locat=data.matrix(((Variable_df[c('X', "Y")]))))
bw <- bw.ggwr(formula = f,
data = Variable_shp[c(col_PC, col_y)],
approach = "AICc",
kernel = "gaussian",
adaptive = TRUE,
longlat = T,
dMat = DM )
colnames(Variable_df)
col_X =
c( "Cluster", # 分群
"Hospital","Clinic", "Temple", "Ele","Junior" ,"Senior", "Train.stat", # 公共建設
"Ele_stu", "Junior_stu" ,"Senior_stu", "Train.crow", # 人流
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta") # 村里收入
col_y = c('Nr')
col_X =
c( "Cluster", # 分群
"Hospital","Clinic", "Temple", "Ele","Junior" ,"Senior", "Train.stat", # 公共建設
"Ele_stu", "Junior_stu" ,"Senior_stu", "Train.crow", # 人流
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta") # 村里收入
col_y = c('Nr')
X
for(i in c(col_X, col_y)){
Variable_shp@data[i] = sapply(Variable_shp@data[i], function(x) as.numeric(x))
Variable_df[i] = sapply(Variable_df[i], function(x) as.numeric(x))
}
for(i in c('Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic","Ele_stu", "Junior_stu" ,"Senior_stu", "Train.crow", "Nr")){
i_new = paste0(i, "_den")
Variable_shp@data[i_new] = Variable_shp@data[i]/Variable_shp@data$Area_sqkm
Variable_df[i_new] = Variable_df[i]/Variable_df$Area_sqkm
}
for (i in col_X[col_X != "Cluster"]){
Variable_df[i] <- scale(Variable_df[i])
Variable_shp@data[i] <-scale(Variable_shp@data[i])
}
col_X =
c( "Cluster", # 分群
"Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"high_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
col_y= c('Nr_den')
for(i in c('Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic","Ele_stu", "Junior_stu" ,"Senior_stu", "Train.crow", "Nr")){
i_new = paste0(i, "_den")
Variable_shp@data[i_new] = Variable_shp@data[i]/Variable_shp@data$Area_sqkm
Variable_df[i_new] = Variable_df[i]/Variable_df$Area_sqkm
}
colnames(Variable_df)
col_X =
c( "Cluster", # 分群
"Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"Ele_stu_den" ,   "Junior_stu_den" ,"Senior_stu_den", "Train.crow_den",
"high_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
col_y= c('Nr_den')
for (i in col_X[col_X != "Cluster"]){
Variable_df[i] <- scale(Variable_df[i])
Variable_shp@data[i] <-scale(Variable_shp@data[i])
}
knitr::opts_chunk$set(echo = TRUE)
library(GWmodel)      ### GW models
library(dplyr)
library(sp)           ## Data management
library(car)          ## vif
library(spdep)        ## Spatial autocorrelation
library(RColorBrewer) ## Visualization
library(classInt)     ## Class intervals
library(raster)       ## spatial data
library(grid)         # plot
library(gridExtra)    # Multiple plot
library(ggplot2)      # Multiple plot
library(gtable)
library(GGally)       # 相關係數圖矩陣（scatter plot matrix）
library(maptools)
library(MASS)
library(tmap)
pdf_plot <- function(x){
g = ggplot()+
geom_histogram(aes(x = x, y = ..density..),
fill = '#557C55', alpha = 0.8)+
geom_density(aes(x = x, y = ..density..),
color = '#062C30', size = 1)+
theme_bw()
return(g)
}
getwd()
path = '..\\..\\Roaming-Dogs-Data\\'
# Variable_df <- read.csv(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ), fileEncoding = 'utf-8')
Variable_shp<-shapefile(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ),encoding = 'utf-8')
Variable_shp@data[is.na(Variable_shp@data)] <- 0
Variable_shp@data$Nr = Variable_shp@data$Nr %>% as.integer()
Variable_df = Variable_shp@data
colnames(Variable_df)
col_X =
c( "Cluster", # 分群
"Hospital","Clinic", "Temple", "Ele","Junior" ,"Senior", "Train.stat", # 公共建設
"Ele_stu", "Junior_stu" ,"Senior_stu", "Train.crow", # 人流
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta") # 村里收入
col_y = c('Nr')
for(i in c(col_X, col_y)){
Variable_shp@data[i] = sapply(Variable_shp@data[i], function(x) as.numeric(x))
Variable_df[i] = sapply(Variable_df[i], function(x) as.numeric(x))
}
for(i in c('Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic","Ele_stu", "Junior_stu" ,"Senior_stu", "Train.crow", "Nr")){
i_new = paste0(i, "_den")
Variable_shp@data[i_new] = Variable_shp@data[i]/Variable_shp@data$Area_sqkm
Variable_df[i_new] = Variable_df[i]/Variable_df$Area_sqkm
}
colnames(Variable_df)
col_X =
c( "Cluster", # 分群
"Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"Ele_stu_den" ,   "Junior_stu_den" ,"Senior_stu_den", "Train.crow_den",
"high_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
col_y= c('Nr_den')
for (i in col_X[col_X != "Cluster"]){
Variable_df[i] <- scale(Variable_df[i])
Variable_shp@data[i] <-scale(Variable_shp@data[i])
}
for (i in col_X[col_X != "Cluster"]){
Variable_df[i] <- scale(Variable_df[i])
Variable_shp@data[i] <-scale(Variable_shp@data[i])
}
arrange(Variable_df[c("COUNTYNAME","TOWNNAME","VILLNAME",col_y)], Nr_den)
pdf_plot(log(Variable_df$Nr_den+1))+xlab("density of Nr")
corr = cor(Variable_df[c(col_y,col_X)])
idx = abs(corr[,col_y])>.05
col_X_02 = names(corr[idx,col_y]) %>% tail(-1)
col_X_02
corr[idx,idx]
data = Variable_df[c(col_X_02,col_y)]
class(data)
pca <- prcomp(~.,  #選擇變數
data = Variable_df[c(col_X_02)],  # 資料
scale = TRUE)                          # 正規化資料
plot(pca,         # 放pca
type="line", # 用直線連結每個點
main="Scree Plot for PCA") # 主標題
# 從pca中取出標準差(pca$sdev)後再平方，計算variance(特徵值)
vars <- (pca$sdev)^2
# 計算每個主成分的解釋比例 = 各個主成分的特徵值/總特徵值
props <- vars / sum(vars)
print(props)
# 累加前n個元素的值
cumulative.props <- cumsum(props)  # 累加前n個元素的值
cumulative.props
ggplot()+
geom_point(aes(x = c(1:length(cumulative.props)), y = cumulative.props))+
ggtitle("累積解釋圖")
col_PC = c()
for(i in c(1:4)){
col_PC[i] = paste0("PC",i)
Variable_shp@data[paste0("PC",i)] <- pca$x[, i]
Variable_df[paste0("PC",i)] <- pca$x[, i]
}
lm.model <- lm(log(Nr_den+1)~., data = Variable_df[c(col_PC, col_y)]) #negative binomial
summary(lm.model)
pdf_plot(lm.model$residuals)
ggplot(Variable_df)+
geom_point(aes(x = X, y = Y, color = lm.model$residuals))
f = log(Nr_den+1)~.
DM <- gw.dist(dp.locat=data.matrix(((Variable_df[c('X', "Y")]))))
bw <- bw.ggwr(formula = f,
data = Variable_shp[c(col_PC, col_y)],
approach = "AICc",
kernel = "gaussian",
adaptive = TRUE,
longlat = T,
dMat = DM )
bw
bw <- bw.ggwr(formula = f,
data = Variable_shp[c(col_PC, col_y)],
approach = "AICc",
kernel = "gaussian",
dMat = DM )
pdf_plot(lm.model$residuals)
lm.model <- lm(log(Nr_den+1)~., data = Variable_df[c(col_PC, col_y)]) #negative binomial
summary(lm.model)
f = log(Nr_den+1)~.
DM <- gw.dist(dp.locat=data.matrix(((Variable_df[c('X', "Y")]))))
bw <- bw.ggwr(formula = f,
data = Variable_shp[c(col_PC, col_y)],
approach = "AICc",
kernel = "gaussian",
dMat = DM )
ggpairs(Variable_df, columns =c(col_X,col_y))
for (i in col_X[col_X != "Cluster"]){
Variable_df[i] <- scale(Variable_df[i])
Variable_shp@data[i] <-scale(Variable_shp@data[i])
}
pdf_plot(log(Variable_df$Nr_den+1))+xlab("density of Nr")
ggpairs(Variable_df, columns =c(col_X_02,col_y))
View(Variable_KS_df)
View(Variable_df)
for(i in c('Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic","Ele_stu", "Junior_stu" ,"Senior_stu", "Train.crow", "Nr")){
i_new = paste0(i, "_den")
Variable_shp@data[i_new] = Variable_shp@data[i]/Variable_shp@data$Area_sqkm
Variable_df[i_new] = Variable_df[i]/Variable_df$Area_sqkm
}
colnames(Variable_df)
col_X =
c( "Cluster", # 分群
"Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"Ele_stu_den" ,   "Junior_stu_den" ,"Senior_stu_den", "Train.crow_den",
"high_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
col_y= c('Nr_den')
for (i in col_X[col_X != "Cluster"]){
Variable_df[i] <- scale(Variable_df[i])
Variable_shp@data[i] <-scale(Variable_shp@data[i])
}
arrange(Variable_df[c("COUNTYNAME","TOWNNAME","VILLNAME",col_y)], Nr_den)
```{r}
arrange(Variable_df[c("COUNTYNAME","TOWNNAME","VILLNAME",col_y)], Nr_den)
pdf_plot(log(Variable_df$Nr_den+1))+xlab("density of Nr")
pdf_plot(log(Variable_df$Nr_den+1))+xlab("log the density of Nr")
corr = cor(Variable_df[c(col_y,col_X)])
idx = abs(corr[,col_y])>.05
col_X_02 = names(corr[idx,col_y]) %>% tail(-1)
corr[idx,idx]
ggpairs(Variable_df, columns =c(col_X_02,col_y))
col_X =
c( "Cluster", # 分群
"Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"Ele_stu_den" ,   "Junior_stu_den" ,"Senior_stu_den", "Train.crow_den",
"high_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
col_y= c('Nr_den')
knitr::opts_chunk$set(echo = TRUE)
library(GWmodel)      ### GW models
library(dplyr)
library(sp)           ## Data management
library(car)          ## vif
library(spdep)        ## Spatial autocorrelation
library(RColorBrewer) ## Visualization
library(classInt)     ## Class intervals
library(raster)       ## spatial data
library(grid)         # plot
library(gridExtra)    # Multiple plot
library(ggplot2)      # Multiple plot
library(gtable)
library(GGally)       # 相關係數圖矩陣（scatter plot matrix）
library(maptools)
library(MASS)
library(tmap)
pdf_plot <- function(x){
g = ggplot()+
geom_histogram(aes(x = x, y = ..density..),
fill = '#557C55', alpha = 0.8)+
geom_density(aes(x = x, y = ..density..),
color = '#062C30', size = 1)+
theme_bw()
return(g)
}
getwd()
path = '..\\..\\Roaming-Dogs-Data\\'
# Variable_df <- read.csv(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ), fileEncoding = 'utf-8')
Variable_shp<-shapefile(paste0(path, "@Taiwan_sampling_village_variable\\Taiwan_sampling_village_variable.shp" ),encoding = 'utf-8')
Variable_shp@data[is.na(Variable_shp@data)] <- 0
Variable_shp@data$Nr = Variable_shp@data$Nr %>% as.integer()
Variable_df = Variable_shp@data
colnames(Variable_df)
col_X =
c( "Cluster", # 分群
"Hospital","Clinic", "Temple", "Ele","Junior" ,"Senior", "Train.stat", # 公共建設
"Ele_stu", "Junior_stu" ,"Senior_stu", "Train.crow", # 人流
"high_rat",   "mid_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta") # 村里收入
col_y = c('Nr')
for(i in c(col_X, col_y)){
Variable_shp@data[i] = sapply(Variable_shp@data[i], function(x) as.numeric(x))
Variable_df[i] = sapply(Variable_df[i], function(x) as.numeric(x))
}
for(i in c('Hospital',  "Temple",  "Ele" ,"Junior" ,"Senior", "Train.stat",  "Clinic","Ele_stu", "Junior_stu" ,"Senior_stu", "Train.crow", "Nr")){
i_new = paste0(i, "_den")
Variable_shp@data[i_new] = Variable_shp@data[i]/Variable_shp@data$Area_sqkm
Variable_df[i_new] = Variable_df[i]/Variable_df$Area_sqkm
}
colnames(Variable_df)
col_X =
c( "Cluster", # 分群
"Hospital_den" ,  "Temple_den",  "Ele_den" ,"Junior_den" ,"Senior_den", "Train.stat_den",  "Clinic_den", # 公共建設
"Ele_stu_den" ,   "Junior_stu_den" ,"Senior_stu_den", "Train.crow_den",
"high_rat","low_rat", "M_F_RAT" , "P_DEN", "YOUN_DEP","OLD_DEP","AGING_IDX", # 人口統計(教育程度、人口密度...)
"Income_mea","Income_sta")
col_y= c('Nr_den')
for (i in col_X[col_X != "Cluster"]){
Variable_df[i] <- scale(Variable_df[i])
Variable_shp@data[i] <-scale(Variable_shp@data[i])
}
arrange(Variable_df[c("COUNTYNAME","TOWNNAME","VILLNAME",col_y)], Nr_den)
```{r Nr_den pdf}
pdf_plot(log(Variable_df$Nr_den+1))+xlab("log the density of Nr")
corr = cor(Variable_df[c(col_y,col_X)])
idx = abs(corr[,col_y])>.05
col_X_02 = names(corr[idx,col_y]) %>% tail(-1)
corr[idx,idx]
ggpairs(Variable_df, columns =c(col_X_02,col_y))
col_X
print(Variable_df$Temple_den)
print(Variable_df$Clinic_den)
corr = cor(Variable_df[c(col_y,col_X)])
idx = abs(corr[,col_y])>.05
col_X_02 = names(corr[idx,col_y]) %>% tail(-1)
corr[idx,idx]
data = Variable_df[c(col_X_02,col_y)]
class(data)
pca <- prcomp(~.,  #選擇變數
data = Variable_df[c(col_X_02)],  # 資料
scale = TRUE)                          # 正規化資料
plot(pca,         # 放pca
type="line", # 用直線連結每個點
main="Scree Plot for PCA") # 主標題
plot(pca,         # 放pca
type="line", # 用直線連結每個點
main="Scree Plot for PCA") # 主標題
# 計算每個主成分的解釋比例 = 各個主成分的特徵值/總特徵值
props <- vars / sum(vars)
print(props)
# 累加前n個元素的值
cumulative.props <- cumsum(props)  # 累加前n個元素的值
cumulative.props
ggplot()+
geom_point(aes(x = c(1:length(cumulative.props)), y = cumulative.props))+
ggtitle("累積解釋圖")
col_PC[i] = paste0("PC",i)
Variable_shp@data[paste0("PC",i)] <- pca$x[, i]
col_PC = c()
for(i in c(1:4)){
col_PC[i] = paste0("PC",i)
Variable_shp@data[paste0("PC",i)] <- pca$x[, i]
Variable_df[paste0("PC",i)] <- pca$x[, i]
}
lm.model <- lm(log(Nr_den+1)~., data = Variable_df[c(col_PC, col_y)]) #negative binomial
summary(lm.model)
pdf_plot(lm.model$residuals)
ggplot(Variable_df)+
geom_point(aes(x = X, y = Y, color = lm.model$residuals))
dists <- as.matrix(dist(cbind(Variable_df$X, Variable_df$Y)))
dists.inv <- 1/dists
diag(dists.inv) <- 0
Moran.I(lm.model$residuals, dists.inv)
ape::Moran.I(lm.model$residuals, dists.inv)
install.packages('ape')
ape::Moran.I(lm.model$residuals, dists.inv)
lm.model$residuals
Moran.I( lm.model$residuals, DM, scaled = FALSE, na.rm = FALSE,
alternative = "two.sided")
ape::Moran.I( lm.model$residuals, DM, scaled = FALSE, na.rm = FALSE,
alternative = "two.sided")
ggplot(Variable_df)+
geom_point(aes(x = X, y = Y, color = lm.model$residuals))
ape::Moran.I( lm.model$residuals, dists.inv, scaled = FALSE, na.rm = FALSE,
alternative = "two.sided")
dists <- as.matrix(dist(cbind(Variable_df$X, Variable_df$Y)))
dists.inv <- 1/dists
diag(dists.inv) <- 0
ape::Moran.I( lm.model$residuals, dists.inv, scaled = FALSE, na.rm = FALSE,
alternative = "two.sided")
View(dists)
ape::Moran.I( lm.model$residuals, dists.inv, scaled = FALSE, na.rm = T,
alternative = "two.sided")
View(Variable_df)
