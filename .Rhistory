res = residuals(glmm_ComPo,  type = "std_dev_res")
p = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_residuals")+
ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("$\\hat{Nr}$ vs. residuals"), sprintf("corr = %.4f", corr(fit, res))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Nr_res_%s.png",corr, corr,i))
p = ggplot()+
geom_point(aes(x = Variable_df[idx.county, "Nr"], y = as.vector(res)))+
xlab("Nr")+ ylab("std_dev_residuals")+  ggtitle(sprintf("%s %s",corr,i), subtitle =  "Nr vs. residuals")
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
}
}
n = "04"
path =paste0( getwd(), sprintf("/model/model%s/No_train_test", n))
col_X_03_01 = c("Cluster",  "M_F_RAT", "H_CNT", "offset(log(Area_sqkm))")
col_X_03_02 = "P_H_CNT"
# for loop ====
for (i in counties[counties!= "連江縣"]){
idx.county = Variable_df$COUNTYNAME == i
print(sprintf("%s : %.0f",i, sum(idx.county)))
if( i == "臺北市"){
var_X = paste(col_X_03_01[col_X_03_01 != "Cluster"], collapse = " + ")
}else{
var_X = paste(col_X_03_01, collapse = " + ")
}
# spaMM_fitting
for (corr in c("Cauchy", "Matern")){
spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
print(f)
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family=negbin())
file.name = paste0(path, sprintf("/%s/%s_%s.rds",corr, corr,i))
saveRDS(glmm_ComPo, file.name)
# spaMM_fitting_plot
getwd()
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Fit_res_%s.png", corr, corr,i))
fit = predict(glmm_ComPo,type = "response")
res = residuals(glmm_ComPo,  type = "std_dev_res")
p = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_residuals")+
ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("$\\hat{Nr}$ vs. residuals"), sprintf("corr = %.4f", cor(fit, res))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Nr_res_%s.png",corr, corr,i))
p = ggplot()+
geom_point(aes(x = Variable_df[idx.county, "Nr"], y = as.vector(res)))+
xlab("Nr")+ ylab("std_dev_residuals")+  ggtitle(sprintf("%s %s",corr,i), subtitle =  "Nr vs. residuals")
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
}
}
n = "04"
path =paste0( getwd(), sprintf("/model/model%s/No_train_test", n))
col_X_03_01 = c("Cluster",  "M_F_RAT", "H_CNT", "offset(log(Area_sqkm))")
col_X_03_02 = "P_H_CNT"
# for loop ====
for (i in counties[counties!= "連江縣"]){
idx.county = Variable_df$COUNTYNAME == i
print(sprintf("%s : %.0f",i, sum(idx.county)))
if( i == "臺北市"){
var_X = paste(col_X_03_01[col_X_03_01 != "Cluster"], collapse = " + ")
}else{
var_X = paste(col_X_03_01, collapse = " + ")
}
# spaMM_fitting
for (corr in c("Cauchy", "Matern")){
spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
print(f)
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family=negbin(), method="REML" )
file.name = paste0(path, sprintf("/%s/%s_%s.rds",corr, corr,i))
saveRDS(glmm_ComPo, file.name)
# spaMM_fitting_plot
getwd()
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Fit_res_%s.png", corr, corr,i))
fit = predict(glmm_ComPo,type = "response")
res = residuals(glmm_ComPo,  type = "std_dev_res")
p = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_residuals")+
ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("$\\hat{Nr}$  vs. residuals"), sprintf("corr = %.4f", cor(fit, res))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Nr_res_%s.png",corr, corr,i))
p = ggplot()+
geom_point(aes(x = Variable_df[idx.county, "Nr"], y = as.vector(res)))+
xlab("Nr")+ ylab("std_dev_residuals")+  ggtitle(sprintf("%s %s",corr,i), subtitle =  "Nr vs. residuals")
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
}
}
TeX("$\\hat{Nr}$ vs. residuals")
# # Nr~Cluster+School+Temple+P_H_CNT+Income_mea+Area_sqkm+Matern(1|X+Y)
path.mod = "C:/@@Roaming_Dogs_Data_Analysis/Roaming-Dogs-Code/Model-fitting/model/model01/Train_test"
# path.mod = "Roaming-Dogs-Code/Model-fitting/model/model01/Train_test/"
col_X_03 = c("Cluster", "P_H_CNT", "Area_sqkm")
i = "新竹市"; corr = "Matern"
for (i in counties[counties!= "連江縣"]){
idx.county = Variable_df$COUNTYNAME == i
print(sprintf("%s : %.0f",i, sum(idx.county)))
idx.list = split.the.data(idx.county, .8)
idx.train = idx.list$idx.train ; idx.test = idx.list$idx.test
if( i == "臺北市"){
var_X = paste(col_X_03[col_X_03 != "Cluster"], collapse = " + ")
}else{
var_X = paste(col_X_03, collapse = " + ")
}
# spaMM_fitting
for (corr in c("Cauchy", "Matern")){
spa_random = sprintf("%s(1|X+Y)", corr)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
glmm_ComPo = fitme(f,data= Variable_df[idx.train, c(col_y, col_X,  "X", "Y")], family = COMPoisson())
file.name = paste0(path.mod, sprintf("/%s/%s_%s.rds",corr, corr,i))
saveRDS(glmm_ComPo, file.name)
# spaMM_fitting_plot
getwd()
plot.name =  paste0(sprintf("model/model01/Train_test/%s/Plot/%s_Fit_res_%s.png",corr, corr,i))
fit = predict(glmm_ComPo,type = "response")
res = residuals(glmm_ComPo,  type = "response")
pre = predict(glmm_ComPo, newdata = Variable_df[idx.test, c(col_y, col_X,  "X", "Y")],type = "response")
p = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("residuals")+  ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("$\\hat{Nr}$ vs. residuals"), sprintf("train, n = %d", sum(idx.train))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
plot.name =  paste0(sprintf("model/model01/Train_test/%s/Plot/%s_Nr_res_%s.png",corr, corr,i))
p = ggplot()+
geom_point(aes(x = Variable_df[idx.train, "Nr"], y = as.vector(res)))+
xlab("Nr")+ ylab("residuals")+  ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("Nr vs. residuals"), sprintf("n = %d", sum(idx.train))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
plot.name =  paste0(sprintf("model/model01/Train_test/%s/Plot/%s_pre_res_%s.png",corr, corr,i))
p = ggplot()+
geom_point(aes(x = Variable_df[idx.train, "Nr"], y = as.vector(res)))+
xlab("Predict")+ ylab("residuals")+  ggtitle(sprintf("%s %s",corr,i), subtitle = paste(TeX("Predict vs. residuals"), sprintf("test, n = %d", sum(idx.test))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
}
}
n = "05"
path =paste0( getwd(), sprintf("/model/model%s/No_train_test", n))
col_X_03_01 = c("Cluster",  "M_F_RAT", "H_CNT", "offset(log(Area_sqkm))")
col_X_03_02 = "P_H_CNT"
# for loop ====
for (i in counties[counties!= "連江縣"]){
idx.county = Variable_df$COUNTYNAME == i
print(sprintf("%s : %.0f",i, sum(idx.county)))
if( i == "臺北市"){
var_X = paste(col_X_03_01[col_X_03_01 != "Cluster"], collapse = " + ")
}else{
var_X = paste(col_X_03_01, collapse = " + ")
}
# spaMM_fitting
for (corr in c("Cauchy", "Matern")){
spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
print(f)
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family=COMPoisson(), method="REML" )
file.name = paste0(path, sprintf("/%s/%s_%s.rds",corr, corr,i))
saveRDS(glmm_ComPo, file.name)
# spaMM_fitting_plot
getwd()
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Fit_res_%s.png", corr, corr,i))
fit = predict(glmm_ComPo,type = "response")
res = residuals(glmm_ComPo,  type = "std_dev_res")
p = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_residuals")+
ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("$\\hat{Nr}$  vs. residuals"), sprintf("corr = %.4f", cor(fit, res))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Nr_res_%s.png",corr, corr,i))
p = ggplot()+
geom_point(aes(x = Variable_df[idx.county, "Nr"], y = as.vector(res)))+
xlab("Nr")+ ylab("std_dev_residuals")+  ggtitle(sprintf("%s %s",corr,i), subtitle =  "Nr vs. residuals")
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
}
}
n = "05"
path =paste0( getwd(), sprintf("/model/model%s/No_train_test", n))
col_X_03_01 = c("Cluster",  "P_H_CNT", "H_CNT", "offset(log(Area_sqkm))")
col_X_03_02 = "M_F_RAT"
# for loop ====
for (i in counties[counties!= "連江縣"]){
idx.county = Variable_df$COUNTYNAME == i
print(sprintf("%s : %.0f",i, sum(idx.county)))
if( i == "臺北市"){
var_X = paste(col_X_03_01[col_X_03_01 != "Cluster"], collapse = " + ")
}else{
var_X = paste(col_X_03_01, collapse = " + ")
}
# spaMM_fitting
for (corr in c("Cauchy", "Matern")){
spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
f = as.formula(paste("Nr ~", var_X, "+",spa_random))
print(f)
glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family=COMPoisson(), method="REML" )
file.name = paste0(path, sprintf("/%s/%s_%s.rds",corr, corr,i))
saveRDS(glmm_ComPo, file.name)
# spaMM_fitting_plot
getwd()
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Fit_res_%s.png", corr, corr,i))
fit = predict(glmm_ComPo,type = "response")
res = residuals(glmm_ComPo,  type = "std_dev_res")
p = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_residuals")+
ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("$\\hat{Nr}$  vs. residuals"), sprintf("corr = %.4f", cor(fit, res))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Nr_res_%s.png",corr, corr,i))
p = ggplot()+
geom_point(aes(x = Variable_df[idx.county, "Nr"], y = as.vector(res)))+
xlab("Nr")+ ylab("std_dev_residuals")+  ggtitle(sprintf("%s %s",corr,i), subtitle =  "Nr vs. residuals")
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
}
}
file.name
# # spaMM_fitting
#
#   for (corr in c("Cauchy", "Matern")){
#
#     spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
#     f = as.formula(paste("Nr ~", var_X, "+",spa_random))
#     print(f)
#     glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family=negbin(), method="REML" )
#     file.name = paste0(path, sprintf("/%s/%s_%s.rds",corr, corr,i))
#     saveRDS(glmm_ComPo, file.name)
glmm_ComPo = readRDS(file.name)
n = "04"
path =paste0( getwd(), sprintf("/model/model%s/No_train_test", n))
col_X_03_01 = c("Cluster",  "M_F_RAT", "H_CNT", "offset(log(Area_sqkm))")
col_X_03_02 = "P_H_CNT"
# for loop ====
for (i in counties[counties!= "連江縣"]){
idx.county = Variable_df$COUNTYNAME == i
print(sprintf("%s : %.0f",i, sum(idx.county)))
#
#   if( i == "臺北市"){
#
#     var_X = paste(col_X_03_01[col_X_03_01 != "Cluster"], collapse = " + ")
#
#   }else{
#
#     var_X = paste(col_X_03_01, collapse = " + ")
#   }
#
# # spaMM_fitting
#
#   for (corr in c("Cauchy", "Matern")){
#
#     spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
#     f = as.formula(paste("Nr ~", var_X, "+",spa_random))
#     print(f)
#     glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family=negbin(), method="REML" )
#     file.name = paste0(path, sprintf("/%s/%s_%s.rds",corr, corr,i))
#     saveRDS(glmm_ComPo, file.name)
glmm_ComPo = readRDS(file.name)
# spaMM_fitting_plot
getwd()
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Fit_res_%s.png", corr, corr,i))
fit = predict(glmm_ComPo,type = "response")
res = residuals(glmm_ComPo,  type = "response")
p = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+
ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("$\\hat{Nr}$  vs. residuals"), sprintf("corr = %.4f", cor(fit, res))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
# plot.name =  paste0(path, sprintf("/%s/Plot/%s_Nr_res_%s.png",corr, corr,i))
# p = ggplot()+
# geom_point(aes(x = Variable_df[idx.county, "Nr"], y = as.vector(res)))+
# xlab("Nr")+ ylab("std_dev_residuals")+  ggtitle(sprintf("%s %s",corr,i), subtitle =  "Nr vs. residuals")
# p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
}
}
n = "04"
path =paste0( getwd(), sprintf("/model/model%s/No_train_test", n))
col_X_03_01 = c("Cluster",  "M_F_RAT", "H_CNT", "offset(log(Area_sqkm))")
col_X_03_02 = "P_H_CNT"
# for loop ====
for (i in counties[counties!= "連江縣"]){
idx.county = Variable_df$COUNTYNAME == i
print(sprintf("%s : %.0f",i, sum(idx.county)))
#
#   if( i == "臺北市"){
#
#     var_X = paste(col_X_03_01[col_X_03_01 != "Cluster"], collapse = " + ")
#
#   }else{
#
#     var_X = paste(col_X_03_01, collapse = " + ")
#   }
#
# # spaMM_fitting
#
#   for (corr in c("Cauchy", "Matern")){
#
#     spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
#     f = as.formula(paste("Nr ~", var_X, "+",spa_random))
#     print(f)
#     glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family=negbin(), method="REML" )
#     file.name = paste0(path, sprintf("/%s/%s_%s.rds",corr, corr,i))
#     saveRDS(glmm_ComPo, file.name)
glmm_ComPo = readRDS(file.name)
# spaMM_fitting_plot
getwd()
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Fit_res_%s.png", corr, corr,i))
fit = predict(glmm_ComPo,type = "response")
res = residuals(glmm_ComPo,  type = "response")
p = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+
ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("$\\hat{Nr}$  vs. residuals"), sprintf("corr = %.4f", cor(fit, res))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
# plot.name =  paste0(path, sprintf("/%s/Plot/%s_Nr_res_%s.png",corr, corr,i))
# p = ggplot()+
# geom_point(aes(x = Variable_df[idx.county, "Nr"], y = as.vector(res)))+
# xlab("Nr")+ ylab("std_dev_residuals")+  ggtitle(sprintf("%s %s",corr,i), subtitle =  "Nr vs. residuals")
# p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
}
}
file.name
n = "04"
path =paste0( getwd(), sprintf("/model/model%s/No_train_test", n))
col_X_03_01 = c("Cluster",  "M_F_RAT", "H_CNT", "offset(log(Area_sqkm))")
col_X_03_02 = "P_H_CNT"
# for loop ====
for (i in counties[counties!= "連江縣"]){
idx.county = Variable_df$COUNTYNAME == i
print(sprintf("%s : %.0f",i, sum(idx.county)))
#
#   if( i == "臺北市"){
#
#     var_X = paste(col_X_03_01[col_X_03_01 != "Cluster"], collapse = " + ")
#
#   }else{
#
#     var_X = paste(col_X_03_01, collapse = " + ")
#   }
#
# # spaMM_fitting
#
#   for (corr in c("Cauchy", "Matern")){
#
#     spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
#     f = as.formula(paste("Nr ~", var_X, "+",spa_random))
#     print(f)
#     glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family=negbin(), method="REML" )
file.name = paste0(path, sprintf("/%s/%s_%s.rds",corr, corr,i))
#     saveRDS(glmm_ComPo, file.name)
glmm_ComPo = readRDS(file.name)
# spaMM_fitting_plot
getwd()
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Fit_res_%s.png", corr, corr,i))
fit = predict(glmm_ComPo,type = "response")
res = residuals(glmm_ComPo,  type = "response")
p = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+
ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("$\\hat{Nr}$  vs. residuals"), sprintf("corr = %.4f", cor(fit, res))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
# plot.name =  paste0(path, sprintf("/%s/Plot/%s_Nr_res_%s.png",corr, corr,i))
# p = ggplot()+
# geom_point(aes(x = Variable_df[idx.county, "Nr"], y = as.vector(res)))+
# xlab("Nr")+ ylab("std_dev_residuals")+  ggtitle(sprintf("%s %s",corr,i), subtitle =  "Nr vs. residuals")
# p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
}
}
file.name
plot.name
n = "04"
path =paste0( getwd(), sprintf("/model/model%s/No_train_test", n))
col_X_03_01 = c("Cluster",  "M_F_RAT", "H_CNT", "offset(log(Area_sqkm))")
col_X_03_02 = "P_H_CNT"
# for loop ====
for (i in counties[counties!= "連江縣"]){
idx.county = Variable_df$COUNTYNAME == i
print(sprintf("%s : %.0f",i, sum(idx.county)))
#
#   if( i == "臺北市"){
#
#     var_X = paste(col_X_03_01[col_X_03_01 != "Cluster"], collapse = " + ")
#
#   }else{
#
#     var_X = paste(col_X_03_01, collapse = " + ")
#   }
#
# # spaMM_fitting
#
for (corr in c("Cauchy", "Matern")){
#
#     spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
#     f = as.formula(paste("Nr ~", var_X, "+",spa_random))
#     print(f)
#     glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family=negbin(), method="REML" )
file.name = paste0(path, sprintf("/%s/%s_%s.rds",corr, corr,i))
#     saveRDS(glmm_ComPo, file.name)
glmm_ComPo = readRDS(file.name)
# spaMM_fitting_plot
getwd()
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Fit_res_%s.png", corr, corr,i))
fit = predict(glmm_ComPo,type = "response")
res = residuals(glmm_ComPo,  type = "response")
p = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+
ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("$\\hat{Nr}$  vs. residuals"), sprintf("corr = %.4f", cor(fit, res))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
# plot.name =  paste0(path, sprintf("/%s/Plot/%s_Nr_res_%s.png",corr, corr,i))
# p = ggplot()+
# geom_point(aes(x = Variable_df[idx.county, "Nr"], y = as.vector(res)))+
# xlab("Nr")+ ylab("std_dev_residuals")+  ggtitle(sprintf("%s %s",corr,i), subtitle =  "Nr vs. residuals")
# p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
}
}
??residuals
n = "04"
path =paste0( getwd(), sprintf("/model/model%s/No_train_test", n))
col_X_03_01 = c("Cluster",  "M_F_RAT", "H_CNT", "offset(log(Area_sqkm))")
col_X_03_02 = "P_H_CNT"
# for loop ====
for (i in counties[counties!= "連江縣"]){
idx.county = Variable_df$COUNTYNAME == i
print(sprintf("%s : %.0f",i, sum(idx.county)))
#
#   if( i == "臺北市"){
#
#     var_X = paste(col_X_03_01[col_X_03_01 != "Cluster"], collapse = " + ")
#
#   }else{
#
#     var_X = paste(col_X_03_01, collapse = " + ")
#   }
#
# # spaMM_fitting
#
for (corr in c("Cauchy", "Matern")){
#
#     spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
#     f = as.formula(paste("Nr ~", var_X, "+",spa_random))
#     print(f)
#     glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family=negbin(), method="REML" )
file.name = paste0(path, sprintf("/%s/%s_%s.rds",corr, corr,i))
#     saveRDS(glmm_ComPo, file.name)
glmm_ComPo = readRDS(file.name)
# spaMM_fitting_plot
getwd()
# type = c("deviance", "pearson", "response", "std_dev_res")
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Fit_resp_res_%s.png", corr, corr,i))
fit = predict(glmm_ComPo,type = "response")
res = residuals(glmm_ComPo,  type = "response")
p = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+
ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("$\\hat{Nr}$  vs. residuals"), sprintf("corr = %.4f", cor(fit, res))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Fit_std_res_%s.png", corr, corr,i))
res = residuals(glmm_ComPo,  type = "response")
p = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_residuals")+
ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("$\\hat{Nr}$  vs. residuals"), sprintf("corr = %.4f", cor(fit, res))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
# plot.name =  paste0(path, sprintf("/%s/Plot/%s_Nr_res_%s.png",corr, corr,i))
# p = ggplot()+
# geom_point(aes(x = Variable_df[idx.county, "Nr"], y = as.vector(res)))+
# xlab("Nr")+ ylab("std_dev_residuals")+  ggtitle(sprintf("%s %s",corr,i), subtitle =  "Nr vs. residuals")
# p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
}
}
n = "05"
path =paste0( getwd(), sprintf("/model/model%s/No_train_test", n))
col_X_03_01 = c("Cluster",  "P_H_CNT", "H_CNT", "offset(log(Area_sqkm))")
col_X_03_02 = "M_F_RAT"
# for loop ====
for (i in counties[counties!= "連江縣"]){
idx.county = Variable_df$COUNTYNAME == i
print(sprintf("%s : %.0f",i, sum(idx.county)))
if( i == "臺北市"){
var_X = paste(col_X_03_01[col_X_03_01 != "Cluster"], collapse = " + ")
}else{
var_X = paste(col_X_03_01, collapse = " + ")
}
# spaMM_fitting
for (corr in c("Cauchy", "Matern")){
#
#     spa_random = sprintf("%s(0+%s|X+Y)", corr, col_X_03_02)
#     f = as.formula(paste("Nr ~", var_X, "+",spa_random))
#     print(f)
#     glmm_ComPo = fitme(f,data= Variable_df[idx.county, c(col_y, col_X,  "X", "Y")], family=negbin(), method="REML" )
file.name = paste0(path, sprintf("/%s/%s_%s.rds",corr, corr,i))
#     saveRDS(glmm_ComPo, file.name)
glmm_ComPo = readRDS(file.name)
# spaMM_fitting_plot
getwd()
# type = c("deviance", "pearson", "response", "std_dev_res")
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Fit_resp_res_%s.png", corr, corr,i))
fit = predict(glmm_ComPo,type = "response")
res = residuals(glmm_ComPo,  type = "response")
p = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("response residuals")+
ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("$\\hat{Nr}$  vs. residuals"), sprintf("corr = %.4f", cor(fit, res))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
plot.name =  paste0(path, sprintf("/%s/Plot/%s_Fit_std_res_%s.png", corr, corr,i))
res = residuals(glmm_ComPo,  type = "response")
p = ggplot()+
geom_point(aes(x = fit %>% as.vector, y = as.vector(res)))+
xlab(TeX("$\\hat{Nr}$"))+ ylab("std_dev_residuals")+
ggtitle(sprintf("%s %s",corr,i), subtitle =  paste(TeX("$\\hat{Nr}$  vs. residuals"), sprintf("corr = %.4f", cor(fit, res))))
p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
# plot.name =  paste0(path, sprintf("/%s/Plot/%s_Nr_res_%s.png",corr, corr,i))
# p = ggplot()+
# geom_point(aes(x = Variable_df[idx.county, "Nr"], y = as.vector(res)))+
# xlab("Nr")+ ylab("std_dev_residuals")+  ggtitle(sprintf("%s %s",corr,i), subtitle =  "Nr vs. residuals")
# p %>% ggsave(plot.name,., width = 12,height = 8, units = "cm")
}
}
